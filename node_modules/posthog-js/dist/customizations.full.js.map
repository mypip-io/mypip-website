{"version":3,"file":"customizations.full.js","sources":["../src/utils/globals.ts","../src/config.ts","../../core/dist/utils/string-utils.mjs","../../core/dist/utils/type-utils.mjs","../../core/dist/utils/number-utils.mjs","../../core/dist/utils/bucketed-rate-limiter.mjs","../src/utils/logger.ts","../src/utils/index.ts","../src/utils/request-utils.ts","../src/utils/user-agent-utils.ts","../src/uuidv7.ts","../src/storage.ts","../src/constants.ts","../src/utils/event-utils.ts","../src/extensions/sampling.ts","../src/customizations/before-send.ts","../src/customizations/posthogReduxLogger.ts","../src/customizations/setAllPersonProfilePropertiesAsPersonPropertiesForFlags.ts","../src/entrypoints/customizations.full.ts"],"sourcesContent":["import type { PostHog } from '../posthog-core'\nimport { SessionIdManager } from '../sessionid'\nimport {\n    DeadClicksAutoCaptureConfig,\n    ExternalIntegrationKind,\n    Properties,\n    RemoteConfig,\n    SiteAppLoader,\n    SessionStartReason,\n} from '../types'\nimport { SessionRecordingStatus, TriggerType } from '../extensions/replay/triggerMatching'\nimport { eventWithTime } from '@rrweb/types'\nimport { ErrorTracking } from '@posthog/core'\n\n/*\n * Global helpers to protect access to browser globals in a way that is safer for different targets\n * like DOM, SSR, Web workers etc.\n *\n * NOTE: Typically we want the \"window\" but globalThis works for both the typical browser context as\n * well as other contexts such as the web worker context. Window is still exported for any bits that explicitly require it.\n * If in doubt - export the global you need from this file and use that as an optional value. This way the code path is forced\n * to handle the case where the global is not available.\n */\n\n// eslint-disable-next-line no-restricted-globals\nconst win: (Window & typeof globalThis) | undefined = typeof window !== 'undefined' ? window : undefined\n\nexport type AssignableWindow = Window &\n    typeof globalThis & {\n        /*\n         * Main PostHog instance\n         */\n        posthog: any\n\n        /*\n         * This is our contract between (potentially) lazily loaded extensions and the SDK\n         */\n        __PosthogExtensions__?: PostHogExtensions\n\n        /**\n         * When loading remote config, we assign it to this global configuration\n         * for ease of sharing it with the rest of the SDK\n         */\n        _POSTHOG_REMOTE_CONFIG?: Record<\n            string,\n            {\n                config: RemoteConfig\n                siteApps: SiteAppLoader[]\n            }\n        >\n\n        /**\n         * If this is set on the window, our logger will log to the console\n         * for ease of debugging. Used for testing purposes only.\n         *\n         * @see {Config.DEBUG} from config.ts\n         */\n        POSTHOG_DEBUG: any\n\n        // Exposed by the browser\n        doNotTrack: any\n\n        // See entrypoints/customizations.full.ts\n        posthogCustomizations: any\n\n        /**\n         * This is a legacy way to expose these functions, but we still need to support it for backwards compatibility\n         * Can be removed once we drop support for 1.161.1\n         *\n         * See entrypoints/exception-autocapture.ts\n         *\n         * @deprecated use `__PosthogExtensions__.errorWrappingFunctions` instead\n         */\n        posthogErrorWrappingFunctions: any\n\n        /**\n         * This is a legacy way to expose these functions, but we still need to support it for backwards compatibility\n         * Can be removed once we drop support for 1.161.1\n         *\n         * See entrypoints/posthog-recorder.ts\n         *\n         * @deprecated use `__PosthogExtensions__.rrweb` instead\n         */\n        rrweb: any\n\n        /**\n         * This is a legacy way to expose these functions, but we still need to support it for backwards compatibility\n         * Can be removed once we drop support for 1.161.1\n         *\n         * See entrypoints/posthog-recorder.ts\n         *\n         * @deprecated use `__PosthogExtensions__.rrwebConsoleRecord` instead\n         */\n        rrwebConsoleRecord: any\n\n        /**\n         * This is a legacy way to expose these functions, but we still need to support it for backwards compatibility\n         * Can be removed once we drop support for 1.161.1\n         *\n         * See entrypoints/posthog-recorder.ts\n         *\n         * @deprecated use `__PosthogExtensions__.getRecordNetworkPlugin` instead\n         */\n        getRecordNetworkPlugin: any\n\n        /**\n         * This is a legacy way to expose these functions, but we still need to support it for backwards compatibility\n         * Can be removed once we drop support for 1.161.1\n         *\n         * See entrypoints/web-vitals.ts\n         *\n         * @deprecated use `__PosthogExtensions__.postHogWebVitalsCallbacks` instead\n         */\n        postHogWebVitalsCallbacks: any\n\n        /**\n         * This is a legacy way to expose these functions, but we still need to support it for backwards compatibility\n         * Can be removed once we drop support for 1.161.1\n         *\n         * See entrypoints/tracing-headers.ts\n         *\n         * @deprecated use `__PosthogExtensions__.postHogTracingHeadersPatchFns` instead\n         */\n        postHogTracingHeadersPatchFns: any\n\n        /**\n         * This is a legacy way to expose these functions, but we still need to support it for backwards compatibility\n         * Can be removed once we drop support for 1.161.1\n         *\n         * See entrypoints/surveys.ts\n         *\n         * @deprecated use `__PosthogExtensions__.generateSurveys` instead\n         */\n        extendPostHogWithSurveys: any\n\n        /*\n         * These are used to handle our toolbar state.\n         * @see {Toolbar} from extensions/toolbar.ts\n         */\n        ph_load_toolbar: any\n        ph_load_editor: any\n        ph_toolbar_state: any\n    } & Record<`__$$ph_site_app_${string}`, any>\n\n/**\n * This is our contract between (potentially) lazily loaded extensions and the SDK\n * changes to this interface can be breaking changes for users of the SDK\n */\n\nexport type ExternalExtensionKind = 'intercom-integration' | 'crisp-chat-integration'\n\nexport type PostHogExtensionKind =\n    | 'toolbar'\n    | 'exception-autocapture'\n    | 'web-vitals'\n    | 'recorder'\n    | 'tracing-headers'\n    | 'surveys'\n    | 'dead-clicks-autocapture'\n    | 'remote-config'\n    | ExternalExtensionKind\n\nexport interface LazyLoadedSessionRecordingInterface {\n    start: (startReason?: SessionStartReason) => void\n    stop: () => void\n    sessionId: string\n    status: SessionRecordingStatus\n    onRRwebEmit: (rawEvent: eventWithTime) => void\n    log: (message: string, level: 'log' | 'warn' | 'error') => void\n    sdkDebugProperties: Properties\n    overrideLinkedFlag: () => void\n    overrideSampling: () => void\n    overrideTrigger: (triggerType: TriggerType) => void\n    isStarted: boolean\n    tryAddCustomEvent(tag: string, payload: any): boolean\n}\n\nexport interface LazyLoadedDeadClicksAutocaptureInterface {\n    start: (observerTarget: Node) => void\n    stop: () => void\n}\n\ninterface PostHogExtensions {\n    loadExternalDependency?: (\n        posthog: PostHog,\n        kind: PostHogExtensionKind,\n        callback: (error?: string | Event, event?: Event) => void\n    ) => void\n\n    loadSiteApp?: (posthog: PostHog, appUrl: string, callback: (error?: string | Event, event?: Event) => void) => void\n\n    errorWrappingFunctions?: {\n        wrapOnError: (captureFn: (props: ErrorTracking.ErrorProperties) => void) => () => void\n        wrapUnhandledRejection: (captureFn: (props: ErrorTracking.ErrorProperties) => void) => () => void\n        wrapConsoleError: (captureFn: (props: ErrorTracking.ErrorProperties) => void) => () => void\n    }\n    rrweb?: { record: any; version: string }\n    rrwebPlugins?: { getRecordConsolePlugin: any; getRecordNetworkPlugin?: any }\n    generateSurveys?: (posthog: PostHog, isSurveysEnabled: boolean) => any | undefined\n    postHogWebVitalsCallbacks?: {\n        onLCP: (metric: any) => void\n        onCLS: (metric: any) => void\n        onFCP: (metric: any) => void\n        onINP: (metric: any) => void\n    }\n    tracingHeadersPatchFns?: {\n        _patchFetch: (hostnames: string[], distinctId: string, sessionManager?: SessionIdManager) => () => void\n        _patchXHR: (hostnames: string[], distinctId: string, sessionManager?: SessionIdManager) => () => void\n    }\n    initDeadClicksAutocapture?: (\n        ph: PostHog,\n        config: DeadClicksAutoCaptureConfig\n    ) => LazyLoadedDeadClicksAutocaptureInterface\n    integrations?: {\n        [K in ExternalIntegrationKind]?: { start: (posthog: PostHog) => void; stop: () => void }\n    }\n    initSessionRecording?: (ph: PostHog) => LazyLoadedSessionRecordingInterface\n}\n\nconst global: typeof globalThis | undefined = typeof globalThis !== 'undefined' ? globalThis : win\n\nexport const ArrayProto = Array.prototype\nexport const nativeForEach = ArrayProto.forEach\nexport const nativeIndexOf = ArrayProto.indexOf\n\nexport const navigator = global?.navigator\nexport const document = global?.document\nexport const location = global?.location\nexport const fetch = global?.fetch\nexport const XMLHttpRequest =\n    global?.XMLHttpRequest && 'withCredentials' in new global.XMLHttpRequest() ? global.XMLHttpRequest : undefined\nexport const AbortController = global?.AbortController\nexport const userAgent = navigator?.userAgent\nexport const assignableWindow: AssignableWindow = win ?? ({} as any)\n\nexport { win as window }\n","import packageInfo from '../package.json'\n\n// overridden in posthog-core,\n// e.g.     Config.DEBUG = Config.DEBUG || instance.config.debug\nconst Config = {\n    DEBUG: false,\n    LIB_VERSION: packageInfo.version,\n}\n\nexport default Config\n","function includes(str, needle) {\n    return -1 !== str.indexOf(needle);\n}\nconst trim = function(str) {\n    return str.trim();\n};\nconst stripLeadingDollar = function(s) {\n    return s.replace(/^\\$/, '');\n};\nfunction isDistinctIdStringLike(value) {\n    return [\n        'distinct_id',\n        'distinctid'\n    ].includes(value.toLowerCase());\n}\nexport { includes, isDistinctIdStringLike, stripLeadingDollar, trim };\n","import { knownUnsafeEditableEvent } from \"../types.mjs\";\nimport { includes } from \"./string-utils.mjs\";\nconst nativeIsArray = Array.isArray;\nconst ObjProto = Object.prototype;\nconst type_utils_hasOwnProperty = ObjProto.hasOwnProperty;\nconst type_utils_toString = ObjProto.toString;\nconst isArray = nativeIsArray || function(obj) {\n    return '[object Array]' === type_utils_toString.call(obj);\n};\nconst isFunction = (x)=>'function' == typeof x;\nconst isNativeFunction = (x)=>isFunction(x) && -1 !== x.toString().indexOf('[native code]');\nconst isObject = (x)=>x === Object(x) && !isArray(x);\nconst isEmptyObject = (x)=>{\n    if (isObject(x)) {\n        for(const key in x)if (type_utils_hasOwnProperty.call(x, key)) return false;\n        return true;\n    }\n    return false;\n};\nconst isUndefined = (x)=>void 0 === x;\nconst isString = (x)=>'[object String]' == type_utils_toString.call(x);\nconst isEmptyString = (x)=>isString(x) && 0 === x.trim().length;\nconst isNull = (x)=>null === x;\nconst isNullish = (x)=>isUndefined(x) || isNull(x);\nconst isNumber = (x)=>'[object Number]' == type_utils_toString.call(x);\nconst isBoolean = (x)=>'[object Boolean]' === type_utils_toString.call(x);\nconst isFormData = (x)=>x instanceof FormData;\nconst isFile = (x)=>x instanceof File;\nconst isPlainError = (x)=>x instanceof Error;\nconst isKnownUnsafeEditableEvent = (x)=>includes(knownUnsafeEditableEvent, x);\nfunction isInstanceOf(candidate, base) {\n    try {\n        return candidate instanceof base;\n    } catch  {\n        return false;\n    }\n}\nfunction isPrimitive(value) {\n    return null === value || 'object' != typeof value;\n}\nfunction isBuiltin(candidate, className) {\n    return Object.prototype.toString.call(candidate) === `[object ${className}]`;\n}\nfunction isError(candidate) {\n    switch(Object.prototype.toString.call(candidate)){\n        case '[object Error]':\n        case '[object Exception]':\n        case '[object DOMException]':\n        case '[object DOMError]':\n        case '[object WebAssembly.Exception]':\n            return true;\n        default:\n            return isInstanceOf(candidate, Error);\n    }\n}\nfunction isErrorEvent(event) {\n    return isBuiltin(event, 'ErrorEvent');\n}\nfunction isEvent(candidate) {\n    return !isUndefined(Event) && isInstanceOf(candidate, Event);\n}\nfunction isPlainObject(candidate) {\n    return isBuiltin(candidate, 'Object');\n}\nconst yesLikeValues = [\n    true,\n    'true',\n    1,\n    '1',\n    'yes'\n];\nconst isYesLike = (val)=>includes(yesLikeValues, val);\nconst noLikeValues = [\n    false,\n    'false',\n    0,\n    '0',\n    'no'\n];\nconst isNoLike = (val)=>includes(noLikeValues, val);\nexport { type_utils_hasOwnProperty as hasOwnProperty, isArray, isBoolean, isBuiltin, isEmptyObject, isEmptyString, isError, isErrorEvent, isEvent, isFile, isFormData, isFunction, isInstanceOf, isKnownUnsafeEditableEvent, isNativeFunction, isNoLike, isNull, isNullish, isNumber, isObject, isPlainError, isPlainObject, isPrimitive, isString, isUndefined, isYesLike, noLikeValues, yesLikeValues };\n","import { isNumber } from \"./type-utils.mjs\";\nfunction clampToRange(value, min, max, logger, fallbackValue) {\n    if (min > max) {\n        logger.warn('min cannot be greater than max.');\n        min = max;\n    }\n    if (isNumber(value)) if (value > max) {\n        logger.warn(' cannot be  greater than max: ' + max + '. Using max value instead.');\n        return max;\n    } else {\n        if (!(value < min)) return value;\n        logger.warn(' cannot be less than min: ' + min + '. Using min value instead.');\n        return min;\n    }\n    logger.warn(' must be a number. using max or fallback. max: ' + max + ', fallback: ' + fallbackValue);\n    return clampToRange(fallbackValue || max, min, max, logger);\n}\nexport { clampToRange };\n","import { clampToRange } from \"./number-utils.mjs\";\nclass BucketedRateLimiter {\n    constructor(_options){\n        this._options = _options;\n        this._buckets = {};\n        this._refillBuckets = ()=>{\n            Object.keys(this._buckets).forEach((key)=>{\n                const newTokens = this._getBucket(key) + this._refillRate;\n                if (newTokens >= this._bucketSize) delete this._buckets[key];\n                else this._setBucket(key, newTokens);\n            });\n        };\n        this._getBucket = (key)=>this._buckets[String(key)];\n        this._setBucket = (key, value)=>{\n            this._buckets[String(key)] = value;\n        };\n        this.consumeRateLimit = (key)=>{\n            let tokens = this._getBucket(key) ?? this._bucketSize;\n            tokens = Math.max(tokens - 1, 0);\n            if (0 === tokens) return true;\n            this._setBucket(key, tokens);\n            const hasReachedZero = 0 === tokens;\n            if (hasReachedZero) this._onBucketRateLimited?.(key);\n            return hasReachedZero;\n        };\n        this._onBucketRateLimited = this._options._onBucketRateLimited;\n        this._bucketSize = clampToRange(this._options.bucketSize, 0, 100, this._options._logger);\n        this._refillRate = clampToRange(this._options.refillRate, 0, this._bucketSize, this._options._logger);\n        this._refillInterval = clampToRange(this._options.refillInterval, 0, 86400000, this._options._logger);\n        this._removeInterval = setInterval(()=>{\n            this._refillBuckets();\n        }, this._refillInterval);\n    }\n    stop() {\n        if (this._removeInterval) {\n            clearInterval(this._removeInterval);\n            this._removeInterval = void 0;\n        }\n    }\n}\nexport { BucketedRateLimiter };\n","import Config from '../config'\nimport { isUndefined } from '@posthog/core'\nimport { assignableWindow, window } from './globals'\nimport type { Logger } from '@posthog/core'\n\nconst _createLogger = (prefix: string): Logger => {\n    const logger: Logger = {\n        _log: (level: 'log' | 'warn' | 'error', ...args: any[]) => {\n            if (\n                window &&\n                (Config.DEBUG || assignableWindow.POSTHOG_DEBUG) &&\n                !isUndefined(window.console) &&\n                window.console\n            ) {\n                const consoleLog =\n                    '__rrweb_original__' in window.console[level]\n                        ? (window.console[level] as any)['__rrweb_original__']\n                        : window.console[level]\n\n                // eslint-disable-next-line no-console\n                consoleLog(prefix, ...args)\n            }\n        },\n\n        info: (...args: any[]) => {\n            logger._log('log', ...args)\n        },\n\n        warn: (...args: any[]) => {\n            logger._log('warn', ...args)\n        },\n\n        error: (...args: any[]) => {\n            logger._log('error', ...args)\n        },\n\n        critical: (...args: any[]) => {\n            // Critical errors are always logged to the console\n            // eslint-disable-next-line no-console\n            console.error(prefix, ...args)\n        },\n\n        uninitializedWarning: (methodName: string) => {\n            logger.error(`You must initialize PostHog before calling ${methodName}`)\n        },\n\n        createLogger: (additionalPrefix: string) => _createLogger(`${prefix} ${additionalPrefix}`),\n    }\n    return logger\n}\n\nexport const logger = _createLogger('[PostHog.js]')\n\nexport const createLogger = logger.createLogger\n","import { Breaker, Properties } from '../types'\nimport { nativeForEach, nativeIndexOf } from './globals'\nimport { logger } from './logger'\nimport { isFormData, isNull, isNullish, isNumber, isString, isUndefined, hasOwnProperty, isArray } from '@posthog/core'\n\nconst breaker: Breaker = {}\n\nexport function eachArray<E = any>(\n    obj: E[] | null | undefined,\n    iterator: (value: E, key: number) => void | Breaker,\n    thisArg?: any\n): void {\n    if (isArray(obj)) {\n        if (nativeForEach && obj.forEach === nativeForEach) {\n            obj.forEach(iterator, thisArg)\n        } else if ('length' in obj && obj.length === +obj.length) {\n            for (let i = 0, l = obj.length; i < l; i++) {\n                if (i in obj && iterator.call(thisArg, obj[i], i) === breaker) {\n                    return\n                }\n            }\n        }\n    }\n}\n\n/**\n * @param {*=} obj\n * @param {function(...*)=} iterator\n * @param {Object=} thisArg\n */\nexport function each(obj: any, iterator: (value: any, key: any) => void | Breaker, thisArg?: any): void {\n    if (isNullish(obj)) {\n        return\n    }\n    if (isArray(obj)) {\n        return eachArray(obj, iterator, thisArg)\n    }\n    if (isFormData(obj)) {\n        for (const pair of obj.entries()) {\n            if (iterator.call(thisArg, pair[1], pair[0]) === breaker) {\n                return\n            }\n        }\n        return\n    }\n    for (const key in obj) {\n        if (hasOwnProperty.call(obj, key)) {\n            if (iterator.call(thisArg, obj[key], key) === breaker) {\n                return\n            }\n        }\n    }\n}\n\nexport const extend = function (obj: Record<string, any>, ...args: Record<string, any>[]): Record<string, any> {\n    eachArray(args, function (source) {\n        for (const prop in source) {\n            if (source[prop] !== void 0) {\n                obj[prop] = source[prop]\n            }\n        }\n    })\n    return obj\n}\n\nexport const extendArray = function <T>(obj: T[], ...args: T[][]): T[] {\n    eachArray(args, function (source) {\n        eachArray(source, function (item) {\n            obj.push(item)\n        })\n    })\n    return obj\n}\n\nexport const include = function (\n    obj: null | string | Array<any> | Record<string, any>,\n    target: any\n): boolean | Breaker {\n    let found = false\n    if (isNull(obj)) {\n        return found\n    }\n    if (nativeIndexOf && obj.indexOf === nativeIndexOf) {\n        return obj.indexOf(target) != -1\n    }\n    each(obj, function (value) {\n        if (found || (found = value === target)) {\n            return breaker\n        }\n        return\n    })\n    return found\n}\n\n/**\n * Object.entries() polyfill\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\n */\nexport function entries<T = any>(obj: Record<string, T>): [string, T][] {\n    const ownProps = Object.keys(obj)\n    let i = ownProps.length\n    const resArray = new Array(i) // preallocate the Array\n\n    while (i--) {\n        resArray[i] = [ownProps[i], obj[ownProps[i]]]\n    }\n    return resArray\n}\n\nexport const trySafe = function <T>(fn: () => T): T | undefined {\n    try {\n        return fn()\n    } catch {\n        return undefined\n    }\n}\n\nexport const safewrap = function <F extends (...args: any[]) => any = (...args: any[]) => any>(f: F): F {\n    return function (...args) {\n        try {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            return f.apply(this, args)\n        } catch (e) {\n            logger.critical(\n                'Implementation error. Please turn on debug mode and open a ticket on https://app.posthog.com/home#panel=support%3Asupport%3A.'\n            )\n            logger.critical(e)\n        }\n    } as F\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\nexport const safewrapClass = function (klass: Function, functions: string[]): void {\n    for (let i = 0; i < functions.length; i++) {\n        klass.prototype[functions[i]] = safewrap(klass.prototype[functions[i]])\n    }\n}\n\nexport const stripEmptyProperties = function (p: Properties): Properties {\n    const ret: Properties = {}\n    each(p, function (v, k) {\n        if ((isString(v) && v.length > 0) || isNumber(v)) {\n            ret[k] = v\n        }\n    })\n    return ret\n}\n\n/**\n * Deep copies an object.\n * It handles cycles by replacing all references to them with `undefined`\n * Also supports customizing native values\n *\n * @param value\n * @param customizer\n * @returns {{}|undefined|*}\n */\nfunction deepCircularCopy<T extends Record<string, any> = Record<string, any>>(\n    value: T,\n    customizer?: <K extends keyof T = keyof T>(value: T[K], key?: K) => T[K]\n): T | undefined {\n    const COPY_IN_PROGRESS_SET = new Set()\n\n    function internalDeepCircularCopy(value: T, key?: string): T | undefined {\n        if (value !== Object(value)) return customizer ? customizer(value as any, key) : value // primitive value\n\n        if (COPY_IN_PROGRESS_SET.has(value)) return undefined\n        COPY_IN_PROGRESS_SET.add(value)\n        let result: T\n\n        if (isArray(value)) {\n            result = [] as any as T\n            eachArray(value, (it) => {\n                result.push(internalDeepCircularCopy(it))\n            })\n        } else {\n            result = {} as T\n            each(value, (val, key) => {\n                if (!COPY_IN_PROGRESS_SET.has(val)) {\n                    ;(result as any)[key] = internalDeepCircularCopy(val, key)\n                }\n            })\n        }\n        return result\n    }\n    return internalDeepCircularCopy(value)\n}\n\nexport function _copyAndTruncateStrings<T extends Record<string, any> = Record<string, any>>(\n    object: T,\n    maxStringLength: number | null\n): T {\n    return deepCircularCopy(object, (value: any) => {\n        if (isString(value) && !isNull(maxStringLength)) {\n            return (value as string).slice(0, maxStringLength)\n        }\n        return value\n    }) as T\n}\n\n// NOTE: Update PostHogConfig docs if you change this list\n// We will not try to catch all bullets here, but we should make an effort to catch the most common ones\n// You should be highly against adding more to this list, because ultimately customers can configure\n// their `cross_subdomain_cookie` setting to anything they want.\nconst EXCLUDED_FROM_CROSS_SUBDOMAIN_COOKIE = ['herokuapp.com', 'vercel.app', 'netlify.app']\nexport function isCrossDomainCookie(documentLocation: Location | undefined) {\n    const hostname = documentLocation?.hostname\n\n    if (!isString(hostname)) {\n        return false\n    }\n    // split and slice isn't a great way to match arbitrary domains,\n    // but it's good enough for ensuring we only match herokuapp.com when it is the TLD\n    // for the hostname\n    const lastTwoParts = hostname.split('.').slice(-2).join('.')\n\n    for (const excluded of EXCLUDED_FROM_CROSS_SUBDOMAIN_COOKIE) {\n        if (lastTwoParts === excluded) {\n            return false\n        }\n    }\n\n    return true\n}\n\nexport function find<T>(value: T[], predicate: (value: T) => boolean): T | undefined {\n    for (let i = 0; i < value.length; i++) {\n        if (predicate(value[i])) {\n            return value[i]\n        }\n    }\n    return undefined\n}\n\n// Use this instead of element.addEventListener to avoid eslint errors\n// this properly implements the default options for passive event listeners\nexport function addEventListener(\n    element: Window | Document | Element | undefined,\n    event: string,\n    callback: EventListener,\n    options?: AddEventListenerOptions\n): void {\n    const { capture = false, passive = true } = options ?? {}\n\n    // This is the only place where we are allowed to call this function\n    // because the whole idea is that we should be calling this instead of the built-in one\n    // eslint-disable-next-line posthog-js/no-add-event-listener\n    element?.addEventListener(event, callback, { capture, passive })\n}\n\n/**\n * Helper to migrate deprecated config fields to new field names with appropriate warnings\n * @param config - The config object to check\n * @param newField - The new field name to use\n * @param oldField - The deprecated field name to check for\n * @param defaultValue - The default value if neither field is set\n * @param loggerInstance - Optional logger instance for deprecation warnings\n * @returns The value to use (new field takes precedence over old field)\n */\nexport function migrateConfigField<T>(\n    config: Record<string, any>,\n    newField: string,\n    oldField: string,\n    defaultValue: T,\n    loggerInstance?: { warn: (message: string) => void }\n): T {\n    const hasNewField = newField in config && !isUndefined(config[newField])\n    const hasOldField = oldField in config && !isUndefined(config[oldField])\n\n    if (hasNewField) {\n        return config[newField]\n    }\n\n    if (hasOldField) {\n        if (loggerInstance) {\n            loggerInstance.warn(\n                `Config field '${oldField}' is deprecated. Please use '${newField}' instead. ` +\n                    `The old field will be removed in a future major version.`\n            )\n        }\n        return config[oldField]\n    }\n\n    return defaultValue\n}\n","import { each } from './'\n\nimport { isArray, isFile, isUndefined } from '@posthog/core'\nimport { logger } from './logger'\nimport { document } from './globals'\n\nconst localDomains = ['localhost', '127.0.0.1']\n\n/**\n * IE11 doesn't support `new URL`\n * so we can create an anchor element and use that to parse the URL\n * there's a lot of overlap between HTMLHyperlinkElementUtils and URL\n * meaning useful properties like `pathname` are available on both\n */\nexport const convertToURL = (url: string): HTMLAnchorElement | null => {\n    const location = document?.createElement('a')\n    if (isUndefined(location)) {\n        return null\n    }\n\n    location.href = url\n    return location\n}\n\nexport const formDataToQuery = function (formdata: Record<string, any> | FormData, arg_separator = '&'): string {\n    let use_val: string\n    let use_key: string\n    const tph_arr: string[] = []\n\n    each(formdata, function (val: File | string | undefined, key: string | undefined) {\n        // the key might be literally the string undefined for e.g. if {undefined: 'something'}\n        if (isUndefined(val) || isUndefined(key) || key === 'undefined') {\n            return\n        }\n\n        use_val = encodeURIComponent(isFile(val) ? val.name : val.toString())\n        use_key = encodeURIComponent(key)\n        tph_arr[tph_arr.length] = use_key + '=' + use_val\n    })\n\n    return tph_arr.join(arg_separator)\n}\n\n// NOTE: Once we get rid of IE11/op_mini we can start using URLSearchParams\nexport const getQueryParam = function (url: string, param: string): string {\n    const withoutHash: string = url.split('#')[0] || ''\n\n    // Split only on the first ? to sort problem out for those with multiple ?s\n    // and then remove them\n    const queryParams: string = withoutHash.split(/\\?(.*)/)[1] || ''\n    const cleanedQueryParams = queryParams.replace(/^\\?+/g, '')\n\n    const queryParts = cleanedQueryParams.split('&')\n    let keyValuePair\n\n    for (let i = 0; i < queryParts.length; i++) {\n        const parts = queryParts[i].split('=')\n        if (parts[0] === param) {\n            keyValuePair = parts\n            break\n        }\n    }\n\n    if (!isArray(keyValuePair) || keyValuePair.length < 2) {\n        return ''\n    } else {\n        let result = keyValuePair[1]\n        try {\n            result = decodeURIComponent(result)\n        } catch {\n            logger.error('Skipping decoding for malformed query param: ' + result)\n        }\n        return result.replace(/\\+/g, ' ')\n    }\n}\n\n// replace any query params in the url with the provided mask value. Tries to keep the URL as instant as possible,\n// including preserving malformed text in most cases\nexport const maskQueryParams = function <T extends string | undefined>(\n    url: T,\n    maskedParams: string[] | undefined,\n    mask: string\n): T extends string ? string : undefined {\n    if (!url || !maskedParams || !maskedParams.length) {\n        return url as any\n    }\n\n    const splitHash = url.split('#')\n    const withoutHash: string = splitHash[0] || ''\n    const hash = splitHash[1]\n\n    const splitQuery: string[] = withoutHash.split('?')\n    const queryString: string = splitQuery[1]\n    const urlWithoutQueryAndHash: string = splitQuery[0]\n    const queryParts = (queryString || '').split('&')\n\n    // use an array of strings rather than an object to preserve ordering and duplicates\n    const paramStrings: string[] = []\n\n    for (let i = 0; i < queryParts.length; i++) {\n        const keyValuePair = queryParts[i].split('=')\n        if (!isArray(keyValuePair)) {\n            continue\n        } else if (maskedParams.includes(keyValuePair[0])) {\n            paramStrings.push(keyValuePair[0] + '=' + mask)\n        } else {\n            paramStrings.push(queryParts[i])\n        }\n    }\n\n    let result = urlWithoutQueryAndHash\n    if (queryString != null) {\n        result += '?' + paramStrings.join('&')\n    }\n    if (hash != null) {\n        result += '#' + hash\n    }\n\n    return result as any\n}\n\nexport const _getHashParam = function (hash: string, param: string): string | null {\n    const matches = hash.match(new RegExp(param + '=([^&]*)'))\n    return matches ? matches[1] : null\n}\n\nexport const isLocalhost = (): boolean => {\n    return localDomains.includes(location.hostname)\n}\n","import { isFunction, isUndefined, includes } from '@posthog/core'\n\n/**\n * this device detection code is (at time of writing) about 3% of the size of the entire library\n * this is mostly because the identifiers user in regexes and results can't be minified away since\n * they have meaning\n *\n * so, there are some pre-uglifying choices in the code to help reduce the size\n * e.g. many repeated strings are stored as variables and then old-fashioned concatenated together\n *\n * TL;DR here be dragons\n */\nconst FACEBOOK = 'Facebook'\nconst MOBILE = 'Mobile'\nconst IOS = 'iOS'\nconst ANDROID = 'Android'\nconst TABLET = 'Tablet'\nconst ANDROID_TABLET = ANDROID + ' ' + TABLET\nconst IPAD = 'iPad'\nconst APPLE = 'Apple'\nconst APPLE_WATCH = APPLE + ' Watch'\nconst SAFARI = 'Safari'\nconst BLACKBERRY = 'BlackBerry'\nconst SAMSUNG = 'Samsung'\nconst SAMSUNG_BROWSER = SAMSUNG + 'Browser'\nconst SAMSUNG_INTERNET = SAMSUNG + ' Internet'\nconst CHROME = 'Chrome'\nconst CHROME_OS = CHROME + ' OS'\nconst CHROME_IOS = CHROME + ' ' + IOS\nconst INTERNET_EXPLORER = 'Internet Explorer'\nconst INTERNET_EXPLORER_MOBILE = INTERNET_EXPLORER + ' ' + MOBILE\nconst OPERA = 'Opera'\nconst OPERA_MINI = OPERA + ' Mini'\nconst EDGE = 'Edge'\nconst MICROSOFT_EDGE = 'Microsoft ' + EDGE\nconst FIREFOX = 'Firefox'\nconst FIREFOX_IOS = FIREFOX + ' ' + IOS\nconst NINTENDO = 'Nintendo'\nconst PLAYSTATION = 'PlayStation'\nconst XBOX = 'Xbox'\nconst ANDROID_MOBILE = ANDROID + ' ' + MOBILE\nconst MOBILE_SAFARI = MOBILE + ' ' + SAFARI\nconst WINDOWS = 'Windows'\nconst WINDOWS_PHONE = WINDOWS + ' Phone'\nconst NOKIA = 'Nokia'\nconst OUYA = 'Ouya'\nconst GENERIC = 'Generic'\nconst GENERIC_MOBILE = GENERIC + ' ' + MOBILE.toLowerCase()\nconst GENERIC_TABLET = GENERIC + ' ' + TABLET.toLowerCase()\nconst KONQUEROR = 'Konqueror'\n\nconst BROWSER_VERSION_REGEX_SUFFIX = '(\\\\d+(\\\\.\\\\d+)?)'\nconst DEFAULT_BROWSER_VERSION_REGEX = new RegExp('Version/' + BROWSER_VERSION_REGEX_SUFFIX)\n\nconst XBOX_REGEX = new RegExp(XBOX, 'i')\nconst PLAYSTATION_REGEX = new RegExp(PLAYSTATION + ' \\\\w+', 'i')\nconst NINTENDO_REGEX = new RegExp(NINTENDO + ' \\\\w+', 'i')\nconst BLACKBERRY_REGEX = new RegExp(BLACKBERRY + '|PlayBook|BB10', 'i')\n\nconst windowsVersionMap: Record<string, string> = {\n    'NT3.51': 'NT 3.11',\n    'NT4.0': 'NT 4.0',\n    '5.0': '2000',\n    '5.1': 'XP',\n    '5.2': 'XP',\n    '6.0': 'Vista',\n    '6.1': '7',\n    '6.2': '8',\n    '6.3': '8.1',\n    '6.4': '10',\n    '10.0': '10',\n}\n\n/**\n * Safari detection turns out to be complicated. For e.g. https://stackoverflow.com/a/29696509\n * We can be slightly loose because some options have been ruled out (e.g. firefox on iOS)\n * before this check is made\n */\nfunction isSafari(userAgent: string): boolean {\n    return includes(userAgent, SAFARI) && !includes(userAgent, CHROME) && !includes(userAgent, ANDROID)\n}\n\nconst safariCheck = (ua: string, vendor?: string) => (vendor && includes(vendor, APPLE)) || isSafari(ua)\n\n/**\n * This function detects which browser is running this script.\n * The order of the checks are important since many user agents\n * include keywords used in later checks.\n */\nexport const detectBrowser = function (user_agent: string, vendor: string | undefined): string {\n    vendor = vendor || '' // vendor is undefined for at least IE9\n\n    if (includes(user_agent, ' OPR/') && includes(user_agent, 'Mini')) {\n        return OPERA_MINI\n    } else if (includes(user_agent, ' OPR/')) {\n        return OPERA\n    } else if (BLACKBERRY_REGEX.test(user_agent)) {\n        return BLACKBERRY\n    } else if (includes(user_agent, 'IE' + MOBILE) || includes(user_agent, 'WPDesktop')) {\n        return INTERNET_EXPLORER_MOBILE\n    }\n    // https://developer.samsung.com/internet/user-agent-string-format\n    else if (includes(user_agent, SAMSUNG_BROWSER)) {\n        return SAMSUNG_INTERNET\n    } else if (includes(user_agent, EDGE) || includes(user_agent, 'Edg/')) {\n        return MICROSOFT_EDGE\n    } else if (includes(user_agent, 'FBIOS')) {\n        return FACEBOOK + ' ' + MOBILE\n    } else if (includes(user_agent, 'UCWEB') || includes(user_agent, 'UCBrowser')) {\n        return 'UC Browser'\n    } else if (includes(user_agent, 'CriOS')) {\n        return CHROME_IOS // why not just Chrome?\n    } else if (includes(user_agent, 'CrMo')) {\n        return CHROME\n    } else if (includes(user_agent, CHROME)) {\n        return CHROME\n    } else if (includes(user_agent, ANDROID) && includes(user_agent, SAFARI)) {\n        return ANDROID_MOBILE\n    } else if (includes(user_agent, 'FxiOS')) {\n        return FIREFOX_IOS\n    } else if (includes(user_agent.toLowerCase(), KONQUEROR.toLowerCase())) {\n        return KONQUEROR\n    } else if (safariCheck(user_agent, vendor)) {\n        return includes(user_agent, MOBILE) ? MOBILE_SAFARI : SAFARI\n    } else if (includes(user_agent, FIREFOX)) {\n        return FIREFOX\n    } else if (includes(user_agent, 'MSIE') || includes(user_agent, 'Trident/')) {\n        return INTERNET_EXPLORER\n    } else if (includes(user_agent, 'Gecko')) {\n        return FIREFOX\n    }\n\n    return ''\n}\n\nconst versionRegexes: Record<string, RegExp[]> = {\n    [INTERNET_EXPLORER_MOBILE]: [new RegExp('rv:' + BROWSER_VERSION_REGEX_SUFFIX)],\n    [MICROSOFT_EDGE]: [new RegExp(EDGE + '?\\\\/' + BROWSER_VERSION_REGEX_SUFFIX)],\n    [CHROME]: [new RegExp('(' + CHROME + '|CrMo)\\\\/' + BROWSER_VERSION_REGEX_SUFFIX)],\n    [CHROME_IOS]: [new RegExp('CriOS\\\\/' + BROWSER_VERSION_REGEX_SUFFIX)],\n    'UC Browser': [new RegExp('(UCBrowser|UCWEB)\\\\/' + BROWSER_VERSION_REGEX_SUFFIX)],\n    [SAFARI]: [DEFAULT_BROWSER_VERSION_REGEX],\n    [MOBILE_SAFARI]: [DEFAULT_BROWSER_VERSION_REGEX],\n    [OPERA]: [new RegExp('(' + OPERA + '|OPR)\\\\/' + BROWSER_VERSION_REGEX_SUFFIX)],\n    [FIREFOX]: [new RegExp(FIREFOX + '\\\\/' + BROWSER_VERSION_REGEX_SUFFIX)],\n    [FIREFOX_IOS]: [new RegExp('FxiOS\\\\/' + BROWSER_VERSION_REGEX_SUFFIX)],\n    [KONQUEROR]: [new RegExp('Konqueror[:/]?' + BROWSER_VERSION_REGEX_SUFFIX, 'i')],\n    // not every blackberry user agent has the version after the name\n    [BLACKBERRY]: [new RegExp(BLACKBERRY + ' ' + BROWSER_VERSION_REGEX_SUFFIX), DEFAULT_BROWSER_VERSION_REGEX],\n    [ANDROID_MOBILE]: [new RegExp('android\\\\s' + BROWSER_VERSION_REGEX_SUFFIX, 'i')],\n    [SAMSUNG_INTERNET]: [new RegExp(SAMSUNG_BROWSER + '\\\\/' + BROWSER_VERSION_REGEX_SUFFIX)],\n    [INTERNET_EXPLORER]: [new RegExp('(rv:|MSIE )' + BROWSER_VERSION_REGEX_SUFFIX)],\n    Mozilla: [new RegExp('rv:' + BROWSER_VERSION_REGEX_SUFFIX)],\n}\n\n/**\n * This function detects which browser version is running this script,\n * parsing major and minor version (e.g., 42.1). User agent strings from:\n * http://www.useragentstring.com/pages/useragentstring.php\n *\n * `navigator.vendor` is passed in and used to help with detecting certain browsers\n * NB `navigator.vendor` is deprecated and not present in every browser\n */\nexport const detectBrowserVersion = function (userAgent: string, vendor: string | undefined): number | null {\n    const browser = detectBrowser(userAgent, vendor)\n    const regexes: RegExp[] | undefined = versionRegexes[browser as keyof typeof versionRegexes]\n    if (isUndefined(regexes)) {\n        return null\n    }\n\n    for (let i = 0; i < regexes.length; i++) {\n        const regex = regexes[i]\n        const matches = userAgent.match(regex)\n        if (matches) {\n            return parseFloat(matches[matches.length - 2])\n        }\n    }\n    return null\n}\n\n// to avoid repeating regexes or calling them twice, we have an array of matches\n// the first regex that matches uses its matcher function to return the result\nconst osMatchers: [\n    RegExp,\n    [string, string] | ((match: RegExpMatchArray | null, user_agent: string) => [string, string]),\n][] = [\n    [\n        new RegExp(XBOX + '; ' + XBOX + ' (.*?)[);]', 'i'),\n        (match) => {\n            return [XBOX, (match && match[1]) || '']\n        },\n    ],\n    [new RegExp(NINTENDO, 'i'), [NINTENDO, '']],\n    [new RegExp(PLAYSTATION, 'i'), [PLAYSTATION, '']],\n    [BLACKBERRY_REGEX, [BLACKBERRY, '']],\n    [\n        new RegExp(WINDOWS, 'i'),\n        (_, user_agent) => {\n            if (/Phone/.test(user_agent) || /WPDesktop/.test(user_agent)) {\n                return [WINDOWS_PHONE, '']\n            }\n            // not all JS versions support negative lookbehind, so we need two checks here\n            if (new RegExp(MOBILE).test(user_agent) && !/IEMobile\\b/.test(user_agent)) {\n                return [WINDOWS + ' ' + MOBILE, '']\n            }\n            const match = /Windows NT ([0-9.]+)/i.exec(user_agent)\n            if (match && match[1]) {\n                const version = match[1]\n                let osVersion = windowsVersionMap[version] || ''\n                if (/arm/i.test(user_agent)) {\n                    osVersion = 'RT'\n                }\n                return [WINDOWS, osVersion]\n            }\n            return [WINDOWS, '']\n        },\n    ],\n    [\n        /((iPhone|iPad|iPod).*?OS (\\d+)_(\\d+)_?(\\d+)?|iPhone)/,\n        (match) => {\n            if (match && match[3]) {\n                const versionParts = [match[3], match[4], match[5] || '0']\n                return [IOS, versionParts.join('.')]\n            }\n            return [IOS, '']\n        },\n    ],\n    [\n        /(watch.*\\/(\\d+\\.\\d+\\.\\d+)|watch os,(\\d+\\.\\d+),)/i,\n        (match) => {\n            // e.g. Watch4,3/5.3.8 (16U680)\n            let version = ''\n            if (match && match.length >= 3) {\n                version = isUndefined(match[2]) ? match[3] : match[2]\n            }\n            return ['watchOS', version]\n        },\n    ],\n    [\n        new RegExp('(' + ANDROID + ' (\\\\d+)\\\\.(\\\\d+)\\\\.?(\\\\d+)?|' + ANDROID + ')', 'i'),\n        (match) => {\n            if (match && match[2]) {\n                const versionParts = [match[2], match[3], match[4] || '0']\n                return [ANDROID, versionParts.join('.')]\n            }\n            return [ANDROID, '']\n        },\n    ],\n    [\n        /Mac OS X (\\d+)[_.](\\d+)[_.]?(\\d+)?/i,\n        (match) => {\n            const result: [string, string] = ['Mac OS X', '']\n            if (match && match[1]) {\n                const versionParts = [match[1], match[2], match[3] || '0']\n                result[1] = versionParts.join('.')\n            }\n            return result\n        },\n    ],\n    [\n        /Mac/i,\n        // mop up a few non-standard UAs that should match mac\n        ['Mac OS X', ''],\n    ],\n    [/CrOS/, [CHROME_OS, '']],\n    [/Linux|debian/i, ['Linux', '']],\n]\n\nexport const detectOS = function (user_agent: string): [string, string] {\n    for (let i = 0; i < osMatchers.length; i++) {\n        const [rgex, resultOrFn] = osMatchers[i]\n        const match = rgex.exec(user_agent)\n        const result = match && (isFunction(resultOrFn) ? resultOrFn(match, user_agent) : resultOrFn)\n        if (result) {\n            return result\n        }\n    }\n    return ['', '']\n}\n\nexport const detectDevice = function (user_agent: string): string {\n    if (NINTENDO_REGEX.test(user_agent)) {\n        return NINTENDO\n    } else if (PLAYSTATION_REGEX.test(user_agent)) {\n        return PLAYSTATION\n    } else if (XBOX_REGEX.test(user_agent)) {\n        return XBOX\n    } else if (new RegExp(OUYA, 'i').test(user_agent)) {\n        return OUYA\n    } else if (new RegExp('(' + WINDOWS_PHONE + '|WPDesktop)', 'i').test(user_agent)) {\n        return WINDOWS_PHONE\n    } else if (/iPad/.test(user_agent)) {\n        return IPAD\n    } else if (/iPod/.test(user_agent)) {\n        return 'iPod Touch'\n    } else if (/iPhone/.test(user_agent)) {\n        return 'iPhone'\n    } else if (/(watch)(?: ?os[,/]|\\d,\\d\\/)[\\d.]+/i.test(user_agent)) {\n        return APPLE_WATCH\n    } else if (BLACKBERRY_REGEX.test(user_agent)) {\n        return BLACKBERRY\n    } else if (/(kobo)\\s(ereader|touch)/i.test(user_agent)) {\n        return 'Kobo'\n    } else if (new RegExp(NOKIA, 'i').test(user_agent)) {\n        return NOKIA\n    } else if (\n        // Kindle Fire without Silk / Echo Show\n        /(kf[a-z]{2}wi|aeo[c-r]{2})( bui|\\))/i.test(user_agent) ||\n        // Kindle Fire HD\n        /(kf[a-z]+)( bui|\\)).+silk\\//i.test(user_agent)\n    ) {\n        return 'Kindle Fire'\n    } else if (/(Android|ZTE)/i.test(user_agent)) {\n        if (\n            !new RegExp(MOBILE).test(user_agent) ||\n            /(9138B|TB782B|Nexus [97]|pixel c|HUAWEISHT|BTV|noble nook|smart ultra 6)/i.test(user_agent)\n        ) {\n            if (\n                (/pixel[\\daxl ]{1,6}/i.test(user_agent) && !/pixel c/i.test(user_agent)) ||\n                /(huaweimed-al00|tah-|APA|SM-G92|i980|zte|U304AA)/i.test(user_agent) ||\n                (/lmy47v/i.test(user_agent) && !/QTAQZ3/i.test(user_agent))\n            ) {\n                return ANDROID\n            }\n            return ANDROID_TABLET\n        } else {\n            return ANDROID\n        }\n    } else if (new RegExp('(pda|' + MOBILE + ')', 'i').test(user_agent)) {\n        return GENERIC_MOBILE\n    } else if (new RegExp(TABLET, 'i').test(user_agent) && !new RegExp(TABLET + ' pc', 'i').test(user_agent)) {\n        return GENERIC_TABLET\n    } else {\n        return ''\n    }\n}\n\nexport const detectDeviceType = function (user_agent: string): string {\n    const device = detectDevice(user_agent)\n    if (\n        device === IPAD ||\n        device === ANDROID_TABLET ||\n        device === 'Kobo' ||\n        device === 'Kindle Fire' ||\n        device === GENERIC_TABLET\n    ) {\n        return TABLET\n    } else if (device === NINTENDO || device === XBOX || device === PLAYSTATION || device === OUYA) {\n        return 'Console'\n    } else if (device === APPLE_WATCH) {\n        return 'Wearable'\n    } else if (device) {\n        return MOBILE\n    } else {\n        return 'Desktop'\n    }\n}\n","/**\n * uuidv7: An experimental implementation of the proposed UUID Version 7\n *\n * @license Apache-2.0\n * @copyright 2021-2023 LiosK\n * @packageDocumentation\n *\n * from https://github.com/LiosK/uuidv7/blob/e501462ea3d23241de13192ceae726956f9b3b7d/src/index.ts\n */\n\n// polyfill for IE11\nimport { window } from './utils/globals'\n\nimport { isNumber, isUndefined } from '@posthog/core'\n\nif (!Math.trunc) {\n    Math.trunc = function (v) {\n        return v < 0 ? Math.ceil(v) : Math.floor(v)\n    }\n}\n\n// polyfill for IE11\nif (!Number.isInteger) {\n    Number.isInteger = function (value) {\n        return isNumber(value) && isFinite(value) && Math.floor(value) === value\n    }\n}\n\nconst DIGITS = '0123456789abcdef'\n\n/** Represents a UUID as a 16-byte byte array. */\nexport class UUID {\n    /** @param bytes - The 16-byte byte array representation. */\n    constructor(readonly bytes: Readonly<Uint8Array>) {\n        if (bytes.length !== 16) {\n            throw new TypeError('not 128-bit length')\n        }\n    }\n\n    /**\n     * Builds a byte array from UUIDv7 field values.\n     *\n     * @param unixTsMs - A 48-bit `unix_ts_ms` field value.\n     * @param randA - A 12-bit `rand_a` field value.\n     * @param randBHi - The higher 30 bits of 62-bit `rand_b` field value.\n     * @param randBLo - The lower 32 bits of 62-bit `rand_b` field value.\n     */\n    static fromFieldsV7(unixTsMs: number, randA: number, randBHi: number, randBLo: number): UUID {\n        if (\n            !Number.isInteger(unixTsMs) ||\n            !Number.isInteger(randA) ||\n            !Number.isInteger(randBHi) ||\n            !Number.isInteger(randBLo) ||\n            unixTsMs < 0 ||\n            randA < 0 ||\n            randBHi < 0 ||\n            randBLo < 0 ||\n            unixTsMs > 0xffff_ffff_ffff ||\n            randA > 0xfff ||\n            randBHi > 0x3fff_ffff ||\n            randBLo > 0xffff_ffff\n        ) {\n            throw new RangeError('invalid field value')\n        }\n\n        const bytes = new Uint8Array(16)\n        bytes[0] = unixTsMs / 2 ** 40\n        bytes[1] = unixTsMs / 2 ** 32\n        bytes[2] = unixTsMs / 2 ** 24\n        bytes[3] = unixTsMs / 2 ** 16\n        bytes[4] = unixTsMs / 2 ** 8\n        bytes[5] = unixTsMs\n        bytes[6] = 0x70 | (randA >>> 8)\n        bytes[7] = randA\n        bytes[8] = 0x80 | (randBHi >>> 24)\n        bytes[9] = randBHi >>> 16\n        bytes[10] = randBHi >>> 8\n        bytes[11] = randBHi\n        bytes[12] = randBLo >>> 24\n        bytes[13] = randBLo >>> 16\n        bytes[14] = randBLo >>> 8\n        bytes[15] = randBLo\n        return new UUID(bytes)\n    }\n\n    /** @returns The 8-4-4-4-12 canonical hexadecimal string representation. */\n    toString(): string {\n        let text = ''\n        for (let i = 0; i < this.bytes.length; i++) {\n            text = text + DIGITS.charAt(this.bytes[i] >>> 4) + DIGITS.charAt(this.bytes[i] & 0xf)\n            if (i === 3 || i === 5 || i === 7 || i === 9) {\n                text += '-'\n            }\n        }\n\n        if (text.length !== 36) {\n            // We saw one customer whose bundling code was mangling the UUID generation\n            // rather than accept a bad UUID, we throw an error here.\n            throw new Error('Invalid UUIDv7 was generated')\n        }\n        return text\n    }\n\n    /** Creates an object from `this`. */\n    clone(): UUID {\n        return new UUID(this.bytes.slice(0))\n    }\n\n    /** Returns true if `this` is equivalent to `other`. */\n    equals(other: UUID): boolean {\n        return this.compareTo(other) === 0\n    }\n\n    /**\n     * Returns a negative integer, zero, or positive integer if `this` is less\n     * than, equal to, or greater than `other`, respectively.\n     */\n    compareTo(other: UUID): number {\n        for (let i = 0; i < 16; i++) {\n            const diff = this.bytes[i] - other.bytes[i]\n            if (diff !== 0) {\n                return Math.sign(diff)\n            }\n        }\n        return 0\n    }\n}\n\n/** Encapsulates the monotonic counter state. */\nclass V7Generator {\n    private _timestamp = 0\n    private _counter = 0\n    private readonly _random = new DefaultRandom()\n\n    /**\n     * Generates a new UUIDv7 object from the current timestamp, or resets the\n     * generator upon significant timestamp rollback.\n     *\n     * This method returns monotonically increasing UUIDs unless the up-to-date\n     * timestamp is significantly (by ten seconds or more) smaller than the one\n     * embedded in the immediately preceding UUID. If such a significant clock\n     * rollback is detected, this method resets the generator and returns a new\n     * UUID based on the current timestamp.\n     */\n    generate(): UUID {\n        const value = this.generateOrAbort()\n        if (!isUndefined(value)) {\n            return value\n        } else {\n            // reset state and resume\n            this._timestamp = 0\n            const valueAfterReset = this.generateOrAbort()\n            if (isUndefined(valueAfterReset)) {\n                throw new Error('Could not generate UUID after timestamp reset')\n            }\n            return valueAfterReset\n        }\n    }\n\n    /**\n     * Generates a new UUIDv7 object from the current timestamp, or returns\n     * `undefined` upon significant timestamp rollback.\n     *\n     * This method returns monotonically increasing UUIDs unless the up-to-date\n     * timestamp is significantly (by ten seconds or more) smaller than the one\n     * embedded in the immediately preceding UUID. If such a significant clock\n     * rollback is detected, this method aborts and returns `undefined`.\n     */\n    generateOrAbort(): UUID | undefined {\n        const MAX_COUNTER = 0x3ff_ffff_ffff\n        const ROLLBACK_ALLOWANCE = 10_000 // 10 seconds\n\n        const ts = Date.now()\n        if (ts > this._timestamp) {\n            this._timestamp = ts\n            this._resetCounter()\n        } else if (ts + ROLLBACK_ALLOWANCE > this._timestamp) {\n            // go on with previous timestamp if new one is not much smaller\n            this._counter++\n            if (this._counter > MAX_COUNTER) {\n                // increment timestamp at counter overflow\n                this._timestamp++\n                this._resetCounter()\n            }\n        } else {\n            // abort if clock went backwards to unbearable extent\n            return undefined\n        }\n\n        return UUID.fromFieldsV7(\n            this._timestamp,\n            Math.trunc(this._counter / 2 ** 30),\n            this._counter & (2 ** 30 - 1),\n            this._random.nextUint32()\n        )\n    }\n\n    /** Initializes the counter at a 42-bit random integer. */\n    private _resetCounter(): void {\n        this._counter = this._random.nextUint32() * 0x400 + (this._random.nextUint32() & 0x3ff)\n    }\n}\n\n/** A global flag to force use of cryptographically strong RNG. */\ndeclare const UUIDV7_DENY_WEAK_RNG: boolean\n\n/** Stores `crypto.getRandomValues()` available in the environment. */\nlet getRandomValues: <T extends Uint8Array | Uint32Array>(buffer: T) => T = (buffer) => {\n    // fall back on Math.random() unless the flag is set to true\n    // TRICKY: don't use the isUndefined method here as can't pass the reference\n    if (typeof UUIDV7_DENY_WEAK_RNG !== 'undefined' && UUIDV7_DENY_WEAK_RNG) {\n        throw new Error('no cryptographically strong RNG available')\n    }\n\n    for (let i = 0; i < buffer.length; i++) {\n        buffer[i] = Math.trunc(Math.random() * 0x1_0000) * 0x1_0000 + Math.trunc(Math.random() * 0x1_0000)\n    }\n    return buffer\n}\n\n// detect Web Crypto API\nif (window && !isUndefined(window.crypto) && crypto.getRandomValues) {\n    getRandomValues = (buffer) => crypto.getRandomValues(buffer)\n}\n\n/**\n * Wraps `crypto.getRandomValues()` and compatibles to enable buffering; this\n * uses a small buffer by default to avoid unbearable throughput decline in some\n * environments as well as the waste of time and space for unused values.\n */\nclass DefaultRandom {\n    private readonly _buffer = new Uint32Array(8)\n    private _cursor = Infinity\n    nextUint32(): number {\n        if (this._cursor >= this._buffer.length) {\n            getRandomValues(this._buffer)\n            this._cursor = 0\n        }\n        return this._buffer[this._cursor++]\n    }\n}\n\nlet defaultGenerator: V7Generator | undefined\n\n/**\n * Generates a UUIDv7 string.\n *\n * @returns The 8-4-4-4-12 canonical hexadecimal string representation\n * (\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\").\n */\nexport const uuidv7 = (): string => uuidv7obj().toString()\n\n/** Generates a UUIDv7 object. */\nconst uuidv7obj = (): UUID => (defaultGenerator || (defaultGenerator = new V7Generator())).generate()\n\nexport const uuid7ToTimestampMs = (uuid: string): number => {\n    // remove hyphens\n    const hex = uuid.replace(/-/g, '')\n    // ensure that it's a version 7 UUID\n    if (hex.length !== 32) {\n        throw new Error('Not a valid UUID')\n    }\n    if (hex[12] !== '7') {\n        throw new Error('Not a UUIDv7')\n    }\n    // the first 6 bytes are the timestamp, which means that we can read only the first 12 hex characters\n    return parseInt(hex.substring(0, 12), 16)\n}\n","import { extend } from './utils'\nimport { PersistentStore, Properties } from './types'\nimport {\n    DISTINCT_ID,\n    ENABLE_PERSON_PROCESSING,\n    INITIAL_PERSON_INFO,\n    SESSION_ID,\n    SESSION_RECORDING_IS_SAMPLED,\n} from './constants'\n\nimport { isNull, isUndefined } from '@posthog/core'\nimport { logger } from './utils/logger'\nimport { window, document } from './utils/globals'\nimport { uuidv7 } from './uuidv7'\n\n// we store the discovered subdomain in memory because it might be read multiple times\nlet firstNonPublicSubDomain = ''\n\n// helper to allow tests to clear this \"cache\"\nexport const resetSubDomainCache = () => {\n    firstNonPublicSubDomain = ''\n}\n\n/**\n * Browsers don't offer a way to check if something is a public suffix\n * e.g. `.com.au`, `.io`, `.org.uk`\n *\n * But they do reject cookies set on public suffixes\n * Setting a cookie on `.co.uk` would mean it was sent for every `.co.uk` site visited\n *\n * So, we can use this to check if a domain is a public suffix\n * by trying to set a cookie on a subdomain of the provided hostname\n * until the browser accepts it\n *\n * inspired by https://github.com/AngusFu/browser-root-domain\n */\nexport function seekFirstNonPublicSubDomain(hostname: string, cookieJar = document): string {\n    if (firstNonPublicSubDomain) {\n        return firstNonPublicSubDomain\n    }\n\n    if (!cookieJar) {\n        return ''\n    }\n    if (['localhost', '127.0.0.1'].includes(hostname)) return ''\n\n    const list = hostname.split('.')\n    let len = Math.min(list.length, 8) // paranoia - we know this number should be small\n    const key = 'dmn_chk_' + uuidv7()\n\n    while (!firstNonPublicSubDomain && len--) {\n        const candidate = list.slice(len).join('.')\n        const candidateCookieValue = key + '=1;domain=.' + candidate + ';path=/'\n\n        // try to set cookie, include a short expiry in seconds since we'll check immediately\n        cookieJar.cookie = candidateCookieValue + ';max-age=3'\n\n        if (cookieJar.cookie.includes(key)) {\n            // the cookie was accepted by the browser, remove the test cookie\n            cookieJar.cookie = candidateCookieValue + ';max-age=0'\n            firstNonPublicSubDomain = candidate\n        }\n    }\n\n    return firstNonPublicSubDomain\n}\n\nconst DOMAIN_MATCH_REGEX = /[a-z0-9][a-z0-9-]+\\.[a-z]{2,}$/i\nconst originalCookieDomainFn = (hostname: string): string => {\n    const matches = hostname.match(DOMAIN_MATCH_REGEX)\n    return matches ? matches[0] : ''\n}\n\nexport function chooseCookieDomain(hostname: string, cross_subdomain: boolean | undefined): string {\n    if (cross_subdomain) {\n        // NOTE: Could we use this for cross domain tracking?\n        let matchedSubDomain = seekFirstNonPublicSubDomain(hostname)\n\n        if (!matchedSubDomain) {\n            const originalMatch = originalCookieDomainFn(hostname)\n            if (originalMatch !== matchedSubDomain) {\n                logger.info('Warning: cookie subdomain discovery mismatch', originalMatch, matchedSubDomain)\n            }\n            matchedSubDomain = originalMatch\n        }\n\n        return matchedSubDomain ? '; domain=.' + matchedSubDomain : ''\n    }\n    return ''\n}\n\n// Methods partially borrowed from quirksmode.org/js/cookies.html\nexport const cookieStore: PersistentStore = {\n    _is_supported: () => !!document,\n\n    _error: function (msg) {\n        logger.error('cookieStore error: ' + msg)\n    },\n\n    _get: function (name) {\n        if (!document) {\n            return\n        }\n\n        try {\n            const nameEQ = name + '='\n            const ca = document.cookie.split(';').filter((x) => x.length)\n            for (let i = 0; i < ca.length; i++) {\n                let c = ca[i]\n                while (c.charAt(0) == ' ') {\n                    c = c.substring(1, c.length)\n                }\n                if (c.indexOf(nameEQ) === 0) {\n                    return decodeURIComponent(c.substring(nameEQ.length, c.length))\n                }\n            }\n        } catch {}\n        return null\n    },\n\n    _parse: function (name) {\n        let cookie\n        try {\n            cookie = JSON.parse(cookieStore._get(name)) || {}\n        } catch {\n            // noop\n        }\n        return cookie\n    },\n\n    _set: function (name, value, days, cross_subdomain, is_secure) {\n        if (!document) {\n            return\n        }\n        try {\n            let expires = '',\n                secure = ''\n\n            const cdomain = chooseCookieDomain(document.location.hostname, cross_subdomain)\n\n            if (days) {\n                const date = new Date()\n                date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000)\n                expires = '; expires=' + date.toUTCString()\n            }\n\n            if (is_secure) {\n                secure = '; secure'\n            }\n\n            const new_cookie_val =\n                name +\n                '=' +\n                encodeURIComponent(JSON.stringify(value)) +\n                expires +\n                '; SameSite=Lax; path=/' +\n                cdomain +\n                secure\n\n            // 4096 bytes is the size at which some browsers (e.g. firefox) will not store a cookie, warn slightly before that\n            if (new_cookie_val.length > 4096 * 0.9) {\n                logger.warn('cookieStore warning: large cookie, len=' + new_cookie_val.length)\n            }\n\n            document.cookie = new_cookie_val\n            return new_cookie_val\n        } catch {\n            return\n        }\n    },\n\n    _remove: function (name, cross_subdomain) {\n        if (!document?.cookie) {\n            return\n        }\n        try {\n            cookieStore._set(name, '', -1, cross_subdomain)\n        } catch {\n            return\n        }\n    },\n}\n\nlet _localStorage_supported: boolean | null = null\nexport const resetLocalStorageSupported = () => {\n    _localStorage_supported = null\n}\n\nexport const localStore: PersistentStore = {\n    _is_supported: function () {\n        if (!isNull(_localStorage_supported)) {\n            return _localStorage_supported\n        }\n\n        let supported = true\n        if (!isUndefined(window)) {\n            try {\n                const key = '__mplssupport__',\n                    val = 'xyz'\n                localStore._set(key, val)\n                if (localStore._get(key) !== '\"xyz\"') {\n                    supported = false\n                }\n                localStore._remove(key)\n            } catch {\n                supported = false\n            }\n        } else {\n            supported = false\n        }\n        if (!supported) {\n            logger.error('localStorage unsupported; falling back to cookie store')\n        }\n\n        _localStorage_supported = supported\n        return supported\n    },\n\n    _error: function (msg) {\n        logger.error('localStorage error: ' + msg)\n    },\n\n    _get: function (name) {\n        try {\n            return window?.localStorage.getItem(name)\n        } catch (err) {\n            localStore._error(err)\n        }\n        return null\n    },\n\n    _parse: function (name) {\n        try {\n            return JSON.parse(localStore._get(name)) || {}\n        } catch {\n            // noop\n        }\n        return null\n    },\n\n    _set: function (name, value) {\n        try {\n            window?.localStorage.setItem(name, JSON.stringify(value))\n        } catch (err) {\n            localStore._error(err)\n        }\n    },\n\n    _remove: function (name) {\n        try {\n            window?.localStorage.removeItem(name)\n        } catch (err) {\n            localStore._error(err)\n        }\n    },\n}\n\n// Use localstorage for most data but still use cookie for COOKIE_PERSISTED_PROPERTIES\n// This solves issues with cookies having too much data in them causing headers too large\n// Also makes sure we don't have to send a ton of data to the server\nconst COOKIE_PERSISTED_PROPERTIES = [\n    DISTINCT_ID,\n    SESSION_ID,\n    SESSION_RECORDING_IS_SAMPLED,\n    ENABLE_PERSON_PROCESSING,\n    INITIAL_PERSON_INFO,\n]\n\nexport const localPlusCookieStore: PersistentStore = {\n    ...localStore,\n    _parse: function (name) {\n        try {\n            let cookieProperties: Properties = {}\n            try {\n                // See if there's a cookie stored with data.\n                cookieProperties = cookieStore._parse(name) || {}\n            } catch {}\n            const value = extend(cookieProperties, JSON.parse(localStore._get(name) || '{}'))\n            localStore._set(name, value)\n            return value\n        } catch {\n            // noop\n        }\n        return null\n    },\n\n    _set: function (name, value, days, cross_subdomain, is_secure, debug) {\n        try {\n            localStore._set(name, value, undefined, undefined, debug)\n            const cookiePersistedProperties: Record<string, any> = {}\n            COOKIE_PERSISTED_PROPERTIES.forEach((key) => {\n                if (value[key]) {\n                    cookiePersistedProperties[key] = value[key]\n                }\n            })\n\n            if (Object.keys(cookiePersistedProperties).length) {\n                cookieStore._set(name, cookiePersistedProperties, days, cross_subdomain, is_secure, debug)\n            }\n        } catch (err) {\n            localStore._error(err)\n        }\n    },\n\n    _remove: function (name, cross_subdomain) {\n        try {\n            window?.localStorage.removeItem(name)\n            cookieStore._remove(name, cross_subdomain)\n        } catch (err) {\n            localStore._error(err)\n        }\n    },\n}\n\nconst memoryStorage: Properties = {}\n\n// Storage that only lasts the length of the pageview if we don't want to use cookies\nexport const memoryStore: PersistentStore = {\n    _is_supported: function () {\n        return true\n    },\n\n    _error: function (msg) {\n        logger.error('memoryStorage error: ' + msg)\n    },\n\n    _get: function (name) {\n        return memoryStorage[name] || null\n    },\n\n    _parse: function (name) {\n        return memoryStorage[name] || null\n    },\n\n    _set: function (name, value) {\n        memoryStorage[name] = value\n    },\n\n    _remove: function (name) {\n        delete memoryStorage[name]\n    },\n}\n\nlet sessionStorageSupported: boolean | null = null\nexport const resetSessionStorageSupported = () => {\n    sessionStorageSupported = null\n}\n// Storage that only lasts the length of a tab/window. Survives page refreshes\nexport const sessionStore: PersistentStore = {\n    _is_supported: function () {\n        if (!isNull(sessionStorageSupported)) {\n            return sessionStorageSupported\n        }\n        sessionStorageSupported = true\n        if (!isUndefined(window)) {\n            try {\n                const key = '__support__',\n                    val = 'xyz'\n                sessionStore._set(key, val)\n                if (sessionStore._get(key) !== '\"xyz\"') {\n                    sessionStorageSupported = false\n                }\n                sessionStore._remove(key)\n            } catch {\n                sessionStorageSupported = false\n            }\n        } else {\n            sessionStorageSupported = false\n        }\n        return sessionStorageSupported\n    },\n\n    _error: function (msg) {\n        logger.error('sessionStorage error: ', msg)\n    },\n\n    _get: function (name) {\n        try {\n            return window?.sessionStorage.getItem(name)\n        } catch (err) {\n            sessionStore._error(err)\n        }\n        return null\n    },\n\n    _parse: function (name) {\n        try {\n            return JSON.parse(sessionStore._get(name)) || null\n        } catch {\n            // noop\n        }\n        return null\n    },\n\n    _set: function (name, value) {\n        try {\n            window?.sessionStorage.setItem(name, JSON.stringify(value))\n        } catch (err) {\n            sessionStore._error(err)\n        }\n    },\n\n    _remove: function (name) {\n        try {\n            window?.sessionStorage.removeItem(name)\n        } catch (err) {\n            sessionStore._error(err)\n        }\n    },\n}\n","/*\n * Constants\n */\n\n/* PROPERTY KEYS */\n\n// This key is deprecated, but we want to check for it to see whether aliasing is allowed.\nexport const PEOPLE_DISTINCT_ID_KEY = '$people_distinct_id'\nexport const DISTINCT_ID = 'distinct_id'\nexport const ALIAS_ID_KEY = '__alias'\nexport const CAMPAIGN_IDS_KEY = '__cmpns'\nexport const EVENT_TIMERS_KEY = '__timers'\nexport const AUTOCAPTURE_DISABLED_SERVER_SIDE = '$autocapture_disabled_server_side'\nexport const HEATMAPS_ENABLED_SERVER_SIDE = '$heatmaps_enabled_server_side'\nexport const EXCEPTION_CAPTURE_ENABLED_SERVER_SIDE = '$exception_capture_enabled_server_side'\nexport const ERROR_TRACKING_SUPPRESSION_RULES = '$error_tracking_suppression_rules'\nexport const ERROR_TRACKING_CAPTURE_EXTENSION_EXCEPTIONS = '$error_tracking_capture_extension_exceptions'\nexport const WEB_VITALS_ENABLED_SERVER_SIDE = '$web_vitals_enabled_server_side'\nexport const DEAD_CLICKS_ENABLED_SERVER_SIDE = '$dead_clicks_enabled_server_side'\nexport const WEB_VITALS_ALLOWED_METRICS = '$web_vitals_allowed_metrics'\nexport const SESSION_RECORDING_REMOTE_CONFIG = '$session_recording_remote_config'\n// @deprecated can be removed along with eager loaded replay\nexport const SESSION_RECORDING_ENABLED_SERVER_SIDE = '$session_recording_enabled_server_side'\n// @deprecated can be removed along with eager loaded replay\nexport const CONSOLE_LOG_RECORDING_ENABLED_SERVER_SIDE = '$console_log_recording_enabled_server_side'\n// @deprecated can be removed along with eager loaded replay\nexport const SESSION_RECORDING_NETWORK_PAYLOAD_CAPTURE = '$session_recording_network_payload_capture'\n// @deprecated can be removed along with eager loaded replay\nexport const SESSION_RECORDING_MASKING = '$session_recording_masking'\n// @deprecated can be removed along with eager loaded replay\nexport const SESSION_RECORDING_CANVAS_RECORDING = '$session_recording_canvas_recording'\n// @deprecated can be removed along with eager loaded replay\nexport const SESSION_RECORDING_SAMPLE_RATE = '$replay_sample_rate'\n// @deprecated can be removed along with eager loaded replay\nexport const SESSION_RECORDING_MINIMUM_DURATION = '$replay_minimum_duration'\n// @deprecated can be removed along with eager loaded replay\nexport const SESSION_RECORDING_SCRIPT_CONFIG = '$replay_script_config'\nexport const SESSION_ID = '$sesid'\nexport const SESSION_RECORDING_IS_SAMPLED = '$session_is_sampled'\nexport const SESSION_RECORDING_URL_TRIGGER_ACTIVATED_SESSION = '$session_recording_url_trigger_activated_session'\nexport const SESSION_RECORDING_EVENT_TRIGGER_ACTIVATED_SESSION = '$session_recording_event_trigger_activated_session'\nexport const ENABLED_FEATURE_FLAGS = '$enabled_feature_flags'\nexport const PERSISTENCE_EARLY_ACCESS_FEATURES = '$early_access_features'\nexport const PERSISTENCE_FEATURE_FLAG_DETAILS = '$feature_flag_details'\nexport const STORED_PERSON_PROPERTIES_KEY = '$stored_person_properties'\nexport const STORED_GROUP_PROPERTIES_KEY = '$stored_group_properties'\nexport const SURVEYS = '$surveys'\nexport const SURVEYS_ACTIVATED = '$surveys_activated'\nexport const FLAG_CALL_REPORTED = '$flag_call_reported'\nexport const USER_STATE = '$user_state'\nexport const CLIENT_SESSION_PROPS = '$client_session_props'\nexport const CAPTURE_RATE_LIMIT = '$capture_rate_limit'\n\n/** @deprecated Delete this when INITIAL_PERSON_INFO has been around for long enough to ignore backwards compat */\nexport const INITIAL_CAMPAIGN_PARAMS = '$initial_campaign_params'\n/** @deprecated Delete this when INITIAL_PERSON_INFO has been around for long enough to ignore backwards compat */\nexport const INITIAL_REFERRER_INFO = '$initial_referrer_info'\nexport const INITIAL_PERSON_INFO = '$initial_person_info'\nexport const ENABLE_PERSON_PROCESSING = '$epp'\nexport const TOOLBAR_ID = '__POSTHOG_TOOLBAR__'\nexport const TOOLBAR_CONTAINER_CLASS = 'toolbar-global-fade-container'\n\n/**\n * PREVIEW - MAY CHANGE WITHOUT WARNING - DO NOT USE IN PRODUCTION\n * Sentinel value for distinct id, device id, session id. Signals that the server should generate the value\n * */\nexport const COOKIELESS_SENTINEL_VALUE = '$posthog_cookieless'\nexport const COOKIELESS_MODE_FLAG_PROPERTY = '$cookieless_mode'\n\nexport const WEB_EXPERIMENTS = '$web_experiments'\n\n// These are properties that are reserved and will not be automatically included in events\nexport const PERSISTENCE_RESERVED_PROPERTIES = [\n    PEOPLE_DISTINCT_ID_KEY,\n    ALIAS_ID_KEY,\n    CAMPAIGN_IDS_KEY,\n    EVENT_TIMERS_KEY,\n    SESSION_RECORDING_ENABLED_SERVER_SIDE,\n    HEATMAPS_ENABLED_SERVER_SIDE,\n    SESSION_ID,\n    ENABLED_FEATURE_FLAGS,\n    ERROR_TRACKING_SUPPRESSION_RULES,\n    USER_STATE,\n    PERSISTENCE_EARLY_ACCESS_FEATURES,\n    PERSISTENCE_FEATURE_FLAG_DETAILS,\n    STORED_GROUP_PROPERTIES_KEY,\n    STORED_PERSON_PROPERTIES_KEY,\n    SURVEYS,\n    FLAG_CALL_REPORTED,\n    CLIENT_SESSION_PROPS,\n    CAPTURE_RATE_LIMIT,\n    INITIAL_CAMPAIGN_PARAMS,\n    INITIAL_REFERRER_INFO,\n    ENABLE_PERSON_PROCESSING,\n    INITIAL_PERSON_INFO,\n]\n\nexport const SURVEYS_REQUEST_TIMEOUT_MS = 10000\n","import { convertToURL, getQueryParam, maskQueryParams } from './request-utils'\nimport { isNull, stripLeadingDollar } from '@posthog/core'\nimport { Properties } from '../types'\nimport Config from '../config'\nimport { each, extend, extendArray, stripEmptyProperties } from './index'\nimport { document, location, userAgent, window } from './globals'\nimport { detectBrowser, detectBrowserVersion, detectDevice, detectDeviceType, detectOS } from './user-agent-utils'\nimport { cookieStore } from '../storage'\n\nconst URL_REGEX_PREFIX = 'https?://(.*)'\n\n// CAMPAIGN_PARAMS and EVENT_TO_PERSON_PROPERTIES should be kept in sync with\n// https://github.com/PostHog/posthog/blob/master/plugin-server/src/utils/db/utils.ts#L60\n\n// The list of campaign parameters that could be considered personal data under e.g. GDPR.\n// These can be masked in URLs and properties before being sent to posthog.\nexport const PERSONAL_DATA_CAMPAIGN_PARAMS = [\n    'gclid', // google ads\n    'gclsrc', // google ads 360\n    'dclid', // google display ads\n    'gbraid', // google ads, web to app\n    'wbraid', // google ads, app to web\n    'fbclid', // facebook\n    'msclkid', // microsoft\n    'twclid', // twitter\n    'li_fat_id', // linkedin\n    'igshid', // instagram\n    'ttclid', // tiktok\n    'rdt_cid', // reddit\n    'epik', // pinterest\n    'qclid', // quora\n    'sccid', // snapchat\n    'irclid', // impact\n    '_kx', // klaviyo\n]\n\nexport const CAMPAIGN_PARAMS = extendArray(\n    [\n        'utm_source',\n        'utm_medium',\n        'utm_campaign',\n        'utm_content',\n        'utm_term',\n        'gad_source', // google ads source\n        'mc_cid', // mailchimp campaign id\n    ],\n    PERSONAL_DATA_CAMPAIGN_PARAMS\n)\n\nexport const EVENT_TO_PERSON_PROPERTIES = [\n    // mobile params\n    '$app_build',\n    '$app_name',\n    '$app_namespace',\n    '$app_version',\n    // web params\n    '$browser',\n    '$browser_version',\n    '$device_type',\n    '$current_url',\n    '$pathname',\n    '$os',\n    '$os_name', // $os_name is a special case, it's treated as an alias of $os!\n    '$os_version',\n    '$referring_domain',\n    '$referrer',\n    '$screen_height',\n    '$screen_width',\n    '$viewport_height',\n    '$viewport_width',\n    '$raw_user_agent',\n]\n\nexport const MASKED = '<masked>'\n\n// Campaign params that can be read from the cookie store\nexport const COOKIE_CAMPAIGN_PARAMS = [\n    'li_fat_id', // linkedin\n]\n\nexport function getCampaignParams(\n    customTrackedParams?: string[],\n    maskPersonalDataProperties?: boolean,\n    customPersonalDataProperties?: string[] | undefined\n): Record<string, string> {\n    if (!document) {\n        return {}\n    }\n\n    const paramsToMask = maskPersonalDataProperties\n        ? extendArray([], PERSONAL_DATA_CAMPAIGN_PARAMS, customPersonalDataProperties || [])\n        : []\n\n    // Initially get campaign params from the URL\n    const urlCampaignParams = _getCampaignParamsFromUrl(\n        maskQueryParams(document.URL, paramsToMask, MASKED),\n        customTrackedParams\n    )\n\n    // But we can also get some of them from the cookie store\n    // For example: https://learn.microsoft.com/en-us/linkedin/marketing/conversions/enabling-first-party-cookies?view=li-lms-2025-05#reading-li_fat_id-from-cookies\n    const cookieCampaignParams = _getCampaignParamsFromCookie()\n\n    // Prefer the values found in the urlCampaignParams if possible\n    // `extend` will override the values if found in the second argument\n    return extend(cookieCampaignParams, urlCampaignParams)\n}\n\nfunction _getCampaignParamsFromUrl(url: string, customParams?: string[]): Record<string, string> {\n    const campaign_keywords = CAMPAIGN_PARAMS.concat(customParams || [])\n\n    const params: Record<string, any> = {}\n    each(campaign_keywords, function (kwkey) {\n        const kw = getQueryParam(url, kwkey)\n        params[kwkey] = kw ? kw : null\n    })\n\n    return params\n}\n\nfunction _getCampaignParamsFromCookie(): Record<string, string> {\n    const params: Record<string, any> = {}\n    each(COOKIE_CAMPAIGN_PARAMS, function (kwkey) {\n        const kw = cookieStore._get(kwkey)\n        params[kwkey] = kw ? kw : null\n    })\n\n    return params\n}\n\nfunction _getSearchEngine(referrer: string): string | null {\n    if (!referrer) {\n        return null\n    } else {\n        if (referrer.search(URL_REGEX_PREFIX + 'google.([^/?]*)') === 0) {\n            return 'google'\n        } else if (referrer.search(URL_REGEX_PREFIX + 'bing.com') === 0) {\n            return 'bing'\n        } else if (referrer.search(URL_REGEX_PREFIX + 'yahoo.com') === 0) {\n            return 'yahoo'\n        } else if (referrer.search(URL_REGEX_PREFIX + 'duckduckgo.com') === 0) {\n            return 'duckduckgo'\n        } else {\n            return null\n        }\n    }\n}\n\nfunction _getSearchInfoFromReferrer(referrer: string): Record<string, any> {\n    const search = _getSearchEngine(referrer)\n    const param = search != 'yahoo' ? 'q' : 'p'\n    const ret: Record<string, any> = {}\n\n    if (!isNull(search)) {\n        ret['$search_engine'] = search\n\n        const keyword = document ? getQueryParam(document.referrer, param) : ''\n        if (keyword.length) {\n            ret['ph_keyword'] = keyword\n        }\n    }\n\n    return ret\n}\n\nexport function getSearchInfo(): Record<string, any> {\n    const referrer = document?.referrer\n    if (!referrer) {\n        return {}\n    }\n    return _getSearchInfoFromReferrer(referrer)\n}\n\nexport function getBrowserLanguage(): string | undefined {\n    return (\n        navigator.language || // Any modern browser\n        (navigator as Record<string, any>).userLanguage // IE11\n    )\n}\n\nexport function getBrowserLanguagePrefix(): string | undefined {\n    const lang = getBrowserLanguage()\n    return typeof lang === 'string' ? lang.split('-')[0] : undefined\n}\n\nexport function getReferrer(): string {\n    return document?.referrer || '$direct'\n}\n\nexport function getReferringDomain(): string {\n    if (!document?.referrer) {\n        return '$direct'\n    }\n    return convertToURL(document.referrer)?.host || '$direct'\n}\n\nexport function getReferrerInfo(): Record<string, any> {\n    return {\n        $referrer: getReferrer(),\n        $referring_domain: getReferringDomain(),\n    }\n}\n\nexport function getPersonInfo(maskPersonalDataProperties?: boolean, customPersonalDataProperties?: string[]) {\n    const paramsToMask = maskPersonalDataProperties\n        ? extendArray([], PERSONAL_DATA_CAMPAIGN_PARAMS, customPersonalDataProperties || [])\n        : []\n    const url = location?.href.substring(0, 1000)\n    // we're being a bit more economical with bytes here because this is stored in the cookie\n    return {\n        r: getReferrer().substring(0, 1000),\n        u: url ? maskQueryParams(url, paramsToMask, MASKED) : undefined,\n    }\n}\n\nexport function getPersonPropsFromInfo(info: Record<string, any>): Record<string, any> {\n    const { r: referrer, u: url } = info\n    const referring_domain =\n        referrer == null ? undefined : referrer == '$direct' ? '$direct' : convertToURL(referrer)?.host\n\n    const props: Record<string, string | undefined> = {\n        $referrer: referrer,\n        $referring_domain: referring_domain,\n    }\n    if (url) {\n        props['$current_url'] = url\n        const location = convertToURL(url)\n        props['$host'] = location?.host\n        props['$pathname'] = location?.pathname\n        const campaignParams = _getCampaignParamsFromUrl(url)\n        extend(props, campaignParams)\n    }\n    if (referrer) {\n        const searchInfo = _getSearchInfoFromReferrer(referrer)\n        extend(props, searchInfo)\n    }\n    return props\n}\n\nexport function getInitialPersonPropsFromInfo(info: Record<string, any>): Record<string, any> {\n    const personProps = getPersonPropsFromInfo(info)\n    const props: Record<string, any> = {}\n    each(personProps, function (val: any, key: string) {\n        props[`$initial_${stripLeadingDollar(key)}`] = val\n    })\n    return props\n}\n\nexport function getTimezone(): string | undefined {\n    try {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone\n    } catch {\n        return undefined\n    }\n}\n\nexport function getTimezoneOffset(): number | undefined {\n    try {\n        return new Date().getTimezoneOffset()\n    } catch {\n        return undefined\n    }\n}\n\nexport function getEventProperties(\n    maskPersonalDataProperties?: boolean,\n    customPersonalDataProperties?: string[]\n): Properties {\n    if (!userAgent) {\n        return {}\n    }\n    const paramsToMask = maskPersonalDataProperties\n        ? extendArray([], PERSONAL_DATA_CAMPAIGN_PARAMS, customPersonalDataProperties || [])\n        : []\n    const [os_name, os_version] = detectOS(userAgent)\n    return extend(\n        stripEmptyProperties({\n            $os: os_name,\n            $os_version: os_version,\n            $browser: detectBrowser(userAgent, navigator.vendor),\n            $device: detectDevice(userAgent),\n            $device_type: detectDeviceType(userAgent),\n            $timezone: getTimezone(),\n            $timezone_offset: getTimezoneOffset(),\n        }),\n        {\n            $current_url: maskQueryParams(location?.href, paramsToMask, MASKED),\n            $host: location?.host,\n            $pathname: location?.pathname,\n            $raw_user_agent: userAgent.length > 1000 ? userAgent.substring(0, 997) + '...' : userAgent,\n            $browser_version: detectBrowserVersion(userAgent, navigator.vendor),\n            $browser_language: getBrowserLanguage(),\n            $browser_language_prefix: getBrowserLanguagePrefix(),\n            $screen_height: window?.screen.height,\n            $screen_width: window?.screen.width,\n            $viewport_height: window?.innerHeight,\n            $viewport_width: window?.innerWidth,\n            $lib: 'web',\n            $lib_version: Config.LIB_VERSION,\n            $insert_id: Math.random().toString(36).substring(2, 10) + Math.random().toString(36).substring(2, 10),\n            $time: Date.now() / 1000, // epoch time in seconds\n        }\n    )\n}\n","import { isArray, isUndefined, clampToRange } from '@posthog/core'\nimport { logger } from '../utils/logger'\n\nexport function appendArray(currentValue: string[] | undefined, sampleType: string | string[]): string[] {\n    return [...(currentValue ? currentValue : []), ...(isArray(sampleType) ? sampleType : [sampleType])]\n}\n\nexport function updateThreshold(currentValue: number | undefined, percent: number): number {\n    return (isUndefined(currentValue) ? 1 : currentValue) * percent\n}\n\nexport function simpleHash(str: string) {\n    let hash = 0\n    for (let i = 0; i < str.length; i++) {\n        hash = (hash << 5) - hash + str.charCodeAt(i) // (hash * 31) + char code\n        hash |= 0 // Convert to 32bit integer\n    }\n    return Math.abs(hash)\n}\n\n/*\n * receives percent as a number between 0 and 1\n */\nexport function sampleOnProperty(prop: string, percent: number): boolean {\n    return simpleHash(prop) % 100 < clampToRange(percent * 100, 0, 100, logger)\n}\n","import { BeforeSendFn, CaptureResult, KnownEventName } from '../types'\nimport { includes, clampToRange } from '@posthog/core'\nimport { appendArray, sampleOnProperty, updateThreshold } from '../extensions/sampling'\nimport { logger } from '../utils/logger'\n\n/**\n * Provides an implementation of sampling that samples based on the distinct ID.\n * Using the provided percentage.\n * Can be used to create a beforeCapture fn for a PostHog instance.\n *\n * Setting 0.5 will cause roughly 50% of distinct ids to have events sent.\n * Not 50% of events for each distinct id.\n *\n * @param percent a number from 0 to 1, 1 means always send and, 0 means never send the event\n */\nexport function sampleByDistinctId(percent: number): BeforeSendFn {\n    return (captureResult: CaptureResult | null): CaptureResult | null => {\n        if (!captureResult) {\n            return null\n        }\n\n        return sampleOnProperty(captureResult.properties.distinct_id, percent)\n            ? {\n                  ...captureResult,\n                  properties: {\n                      ...captureResult.properties,\n                      $sample_type: ['sampleByDistinctId'],\n                      $sample_threshold: percent,\n                  },\n              }\n            : null\n    }\n}\n\n/**\n * Provides an implementation of sampling that samples based on the session ID.\n * Using the provided percentage.\n * Can be used to create a beforeCapture fn for a PostHog instance.\n *\n * Setting 0.5 will cause roughly 50% of sessions to have events sent.\n * Not 50% of events for each session.\n *\n * @param percent a number from 0 to 1, 1 means always send and, 0 means never send the event\n */\nexport function sampleBySessionId(percent: number): BeforeSendFn {\n    return (captureResult: CaptureResult | null): CaptureResult | null => {\n        if (!captureResult) {\n            return null\n        }\n\n        return sampleOnProperty(captureResult.properties.$session_id, percent)\n            ? {\n                  ...captureResult,\n                  properties: {\n                      ...captureResult.properties,\n                      $sample_type: appendArray(captureResult.properties.$sample_type, 'sampleBySessionId'),\n                      $sample_threshold: updateThreshold(captureResult.properties.$sample_threshold, percent),\n                  },\n              }\n            : null\n    }\n}\n\n/**\n * Provides an implementation of sampling that samples based on the event name.\n * Using the provided percentage.\n * Can be used to create a beforeCapture fn for a PostHog instance.\n *\n * @param eventNames an array of event names to sample, sampling is applied across events not per event name\n * @param percent a number from 0 to 1, 1 means always send, 0 means never send the event\n */\nexport function sampleByEvent(eventNames: KnownEventName[], percent: number): BeforeSendFn {\n    return (captureResult: CaptureResult | null): CaptureResult | null => {\n        if (!captureResult) {\n            return null\n        }\n\n        if (!includes(eventNames, captureResult.event)) {\n            return captureResult\n        }\n\n        const number = Math.random()\n        return number * 100 < clampToRange(percent * 100, 0, 100, logger)\n            ? {\n                  ...captureResult,\n                  properties: {\n                      ...captureResult.properties,\n                      $sample_type: appendArray(captureResult.properties?.$sample_type, 'sampleByEvent'),\n                      $sample_threshold: updateThreshold(captureResult.properties?.$sample_threshold, percent),\n                      $sampled_events: appendArray(captureResult.properties?.$sampled_events, eventNames),\n                  },\n              }\n            : null\n    }\n}\n\nexport const printAndDropEverything: BeforeSendFn = (result) => {\n    // eslint-disable-next-line no-console\n    console.log('Would have sent event:', result)\n    return null\n}\n","import { BucketedRateLimiter, isNullish, isObject, isUndefined, Logger } from '@posthog/core'\nimport { createLogger } from '../utils/logger'\nimport type { PostHog } from '../posthog-core'\n\n// types copied from redux toolkit so we can avoid taking a dependency in the library and confusing people using the SDK\n\n/**\n * An *unknown* action.\n * This is the most minimal possible shape for an action.\n * Allows for type-safe usage of actions without dependencies.\n */\nexport interface UnknownAction {\n    type: string\n    [extraProps: string]: unknown\n}\n\n/**\n * A *dispatching function* (or simply *dispatch function*) is a function that\n * accepts an action or an async action; it then may or may not dispatch one\n * or more actions to the store.\n */\nexport interface Dispatch<A extends UnknownAction = UnknownAction> {\n    <T extends A>(action: T): T\n}\n\n/**\n * A middleware is a higher-order function that composes a dispatch function\n * to return a new dispatch function. It often turns async actions into\n * actions.\n *\n * This matches Redux Toolkit's Middleware interface for compatibility.\n */\nexport interface ReduxMiddleware<\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-object-type\n    _DispatchExt = {},\n    S = any,\n    D extends Dispatch = Dispatch,\n> {\n    (api: MiddlewareAPI<D, S>): (next: (action: unknown) => unknown) => (action: unknown) => unknown\n}\n\n/**\n * A middleware API is an object containing the store's dispatch function and getState function.\n * A middleware is given the middleware API as its first parameter.\n */\nexport interface MiddlewareAPI<D extends Dispatch = Dispatch, S = any> {\n    dispatch: D\n    getState(): S\n}\n\n// end of copied types\n\nexport interface StateEvent {\n    type: string\n    payload?: any\n    timestamp: number\n    executionTimeMs?: number\n    prevState: any\n    nextState: any\n}\n\nexport type PostHogStateLogger = (title: string, stateEvent: StateEvent) => void\n\nexport interface PostHogStateLoggerConfig<S = any> {\n    maskAction?: (action: UnknownAction) => UnknownAction | null\n    maskState?: (state: S, action?: UnknownAction) => S\n    titleFunction?: (stateEvent: StateEvent) => string\n    logger?: PostHogStateLogger\n    diffState?: boolean\n    /**\n     * actions logging is token bucket rate limited to avoid flooding\n     * this controls the rate limiter's refill rate, see BucketedRateLimiter docs for details\n     * normally this is only changed with posthog support assistance\n     */\n    rateLimiterRefillRate?: number\n    /**\n     * actions logging is token bucket rate limited to avoid flooding\n     * this controls the rate limiter's bucket size, see BucketedRateLimiter docs for details\n     * normally this is only changed with posthog support assistance\n     */\n    rateLimiterBucketSize?: number\n}\n\n/**\n * Default title function for Redux events\n */\nfunction defaultTitleFunction(stateEvent: StateEvent): string {\n    const { type, executionTimeMs } = stateEvent\n    const timeText = isNullish(executionTimeMs) ? '' : ` (${executionTimeMs.toFixed(2)}ms)`\n    return `${type}${timeText}`\n}\n\n// we need a posthog logger for the rate limiter\nconst phConsoleLogger: Logger = createLogger('[PostHog Action RateLimiting]')\n\nexport function browserConsoleLogger(title: string, stateEvent: StateEvent): void {\n    // but the posthog logger swallows messages unless debug is on\n    // so we don't want to use it in this default logger\n    // eslint-disable-next-line no-console\n    console.log(title, stateEvent)\n}\n\n/**\n * Logger that sends state events to PostHog session recordings\n * Requires that the loaded posthog instance is provided\n * And returns the function to use as the logger\n *\n * e.g. const config = { logger: sessionRecordingLoggerForPostHogInstance(posthog) }\n */\nexport const sessionRecordingLoggerForPostHogInstance: (posthog: PostHog) => PostHogStateLogger =\n    (postHogInstance: PostHog) =>\n    (title: string, stateEvent: StateEvent): void => {\n        postHogInstance?.sessionRecording?.tryAddCustomEvent('app-state', { title, stateEvent })\n    }\n\n/**\n * Get only the changed keys from two states\n * NB exported for testing purposes only, not part of the public API and may change without warning\n *\n * Returns { prevState: changedKeysOnly, nextState: changedKeysOnly }\n */\nexport function getChangedStateKeys<S>(\n    prevState: S,\n    nextState: S,\n    maxDepth: number = 3\n): { prevState?: Partial<S>; nextState?: Partial<S> } {\n    // Fast bailouts\n    if (prevState === nextState) return { prevState: {}, nextState: {} }\n    if (!prevState || !nextState) return { prevState: prevState as Partial<S>, nextState: nextState as Partial<S> }\n    if (typeof prevState !== 'object' || typeof nextState !== 'object') return {}\n    if (maxDepth <= 0) return { prevState: prevState as Partial<S>, nextState: nextState as Partial<S> }\n\n    const prev: any = {}\n    const next: any = {}\n    let hasChanges = false\n\n    // Single pass: check all keys from both objects\n    const allKeys = new Set([...Object.keys(prevState), ...Object.keys(nextState)])\n\n    for (const key of allKeys) {\n        const prevVal = (prevState as any)[key]\n        const nextVal = (nextState as any)[key]\n\n        if (prevVal === nextVal) continue // No change\n\n        hasChanges = true\n\n        // Handle missing keys\n        if (isUndefined(prevVal)) {\n            next[key] = nextVal\n            continue\n        }\n        if (isUndefined(nextVal)) {\n            prev[key] = prevVal\n            continue\n        }\n\n        // For objects, recurse once more, otherwise treat as primitive\n        if (isObject(prevVal) && isObject(nextVal)) {\n            const nested = getChangedStateKeys(prevVal, nextVal, maxDepth - 1)\n\n            // Only include if there are actual changes\n            if (nested.prevState && Object.keys(nested.prevState).length > 0) prev[key] = nested.prevState\n            if (nested.nextState && Object.keys(nested.nextState).length > 0) next[key] = nested.nextState\n        } else {\n            // Primitive or array - include both values\n            prev[key] = prevVal\n            next[key] = nextVal\n        }\n    }\n\n    return hasChanges ? { prevState: prev, nextState: next } : { prevState: {}, nextState: {} }\n}\n\n// Debounced logger for rate limit messages\nconst createDebouncedActionRateLimitedLogger = () => {\n    let timeout: ReturnType<typeof setTimeout> | null = null\n    let ignoredCount = 0\n    let lastActionType: string | null = null\n\n    return {\n        info: (actionType: string) => {\n            if (lastActionType !== actionType) {\n                // Reset counter when action type changes\n                ignoredCount = 0\n                lastActionType = actionType\n            }\n\n            ignoredCount++\n\n            if (timeout) {\n                clearTimeout(timeout)\n            }\n\n            timeout = setTimeout(() => {\n                const count = ignoredCount\n\n                if (count === 1) {\n                    phConsoleLogger.info(`action \"${actionType}\" has been rate limited`)\n                } else {\n                    phConsoleLogger.info(`action \"${actionType}\" has been rate limited (${count} times)`)\n                }\n\n                ignoredCount = 0\n                timeout = null\n            }, 1000)\n        },\n    }\n}\n\nconst debouncedActionRateLimitedLogger = createDebouncedActionRateLimitedLogger()\n\n/**\n * Creates a Kea plugin that logs actions and state changes to a provided logger\n * This can be used as a plugin in any Kea setup to capture state changes\n */\nexport function posthogKeaLogger<S = any>(config: PostHogStateLoggerConfig<S> = {}) {\n    const middleware = posthogReduxLogger(config)\n\n    return {\n        name: 'posthog-kea-logger',\n        events: {\n            beforeReduxStore(options: any) {\n                options.middleware.push(middleware)\n            },\n        },\n    }\n}\n\n/**\n * Creates a Redux middleware that logs actions and state changes to a provided logger\n * This can be used as middleware in any Redux store to capture state changes\n *\n * The logging uses token-bucket rate limiting to avoid flooding the logging with many changes\n * by default logging rate limiting captures ten action instances before rate limiting by action type\n * refills at a rate of one token / 1-second period\n * e.g. will capture 1 rate limited action every 1 second until the burst ends\n */\nexport function posthogReduxLogger<S = any>(\n    config: PostHogStateLoggerConfig<S> = {}\n    // the empty object is the recommended typing from redux docs\n    //eslint-disable-next-line @typescript-eslint/no-empty-object-type\n): ReduxMiddleware<{}, S> {\n    const {\n        maskAction,\n        maskState,\n        titleFunction = defaultTitleFunction,\n        logger = browserConsoleLogger,\n        diffState = true,\n        rateLimiterRefillRate = 1,\n        rateLimiterBucketSize = 10,\n    } = config\n\n    const rateLimiter: BucketedRateLimiter<string> = new BucketedRateLimiter({\n        refillRate: rateLimiterRefillRate,\n        bucketSize: rateLimiterBucketSize,\n        refillInterval: 1000, // one second in milliseconds,\n        _logger: phConsoleLogger,\n    })\n\n    return (store: MiddlewareAPI<Dispatch, S>) =>\n        (next: (action: unknown) => unknown) =>\n        (action: unknown): unknown => {\n            const typedAction = action as UnknownAction\n            // Get the state before the action\n            const prevState = store.getState()\n\n            // Track execution time\n            // eslint-disable-next-line compat/compat\n            const startTime = performance.now()\n\n            const result = next(typedAction)\n\n            // eslint-disable-next-line compat/compat\n            const endTime = performance.now()\n            const executionTimeMs = endTime - startTime\n\n            // Get the state after the action\n            const nextState = store.getState()\n\n            const maskedAction = maskAction ? maskAction(typedAction) : typedAction\n\n            if (!maskedAction) {\n                return result\n            }\n\n            const isRateLimited = rateLimiter.consumeRateLimit(typedAction.type)\n\n            if (isRateLimited) {\n                debouncedActionRateLimitedLogger.info(typedAction.type)\n            } else {\n                // Apply masking to states\n                try {\n                    const maskedPrevState = maskState ? maskState(prevState, maskedAction) : prevState\n                    const maskedNextState = maskState ? maskState(nextState, maskedAction) : nextState\n\n                    type FilteredState = { 'invalid state'?: string } | (S & Record<string, any>)\n                    let filteredPrevState: FilteredState\n                    let filteredNextState: FilteredState\n                    if (diffState) {\n                        const { prevState: diffedPrevState, nextState: diffedNextState } = getChangedStateKeys(\n                            maskedPrevState,\n                            maskedNextState\n                        )\n                        const invalidPayloadForDiffing: FilteredState = { 'invalid state': 'no changes after diffing' }\n                        filteredPrevState = (diffedPrevState as FilteredState) ?? invalidPayloadForDiffing\n                        filteredNextState = (diffedNextState as FilteredState) ?? invalidPayloadForDiffing\n                    } else {\n                        const invalidPayloadForLogging = { 'invalid state': 'logger only supports object payloads' }\n                        filteredPrevState = isObject(maskedPrevState) ? maskedPrevState : invalidPayloadForLogging\n                        filteredNextState = isObject(maskedNextState) ? maskedNextState : invalidPayloadForLogging\n                    }\n\n                    const { type, ...actionData } = maskedAction\n\n                    const reduxEvent: StateEvent = {\n                        type,\n                        payload: actionData,\n                        timestamp: Date.now(),\n                        executionTimeMs,\n                        prevState: filteredPrevState,\n                        nextState: filteredNextState,\n                    }\n\n                    const title = titleFunction(reduxEvent)\n                    logger(title, reduxEvent)\n                } catch (e: any) {\n                    // logging should never throw errors and break someone's app\n                    phConsoleLogger.error('Error logging state:', e)\n                }\n            }\n\n            return result\n        }\n}\n","import { PostHog } from '../posthog-core'\nimport {\n    CAMPAIGN_PARAMS,\n    getCampaignParams,\n    EVENT_TO_PERSON_PROPERTIES,\n    getEventProperties,\n    getReferrerInfo,\n} from '../utils/event-utils'\nimport { each, extend } from '../utils'\nimport { includes } from '@posthog/core'\n\nexport const setAllPersonProfilePropertiesAsPersonPropertiesForFlags = (posthog: PostHog): void => {\n    const allProperties = extend(\n        {},\n        getEventProperties(\n            posthog.config.mask_personal_data_properties,\n            posthog.config.custom_personal_data_properties\n        ),\n        getCampaignParams(\n            posthog.config.custom_campaign_params,\n            posthog.config.mask_personal_data_properties,\n            posthog.config.custom_personal_data_properties\n        ),\n        getReferrerInfo()\n    )\n    const personProperties: Record<string, string> = {}\n    each(allProperties, function (v, k: string) {\n        if (includes(CAMPAIGN_PARAMS, k) || includes(EVENT_TO_PERSON_PROPERTIES, k)) {\n            personProperties[k] = v\n        }\n    })\n\n    posthog.setPersonPropertiesForFlags(personProperties)\n}\n","// this file is called customizations.full.ts because it includes all customizations\n// this naming scheme allows us to create a lighter version in the future with only the most popular customizations\n// without breaking backwards compatibility\n\nimport * as customizations from '../customizations'\nimport { assignableWindow } from '../utils/globals'\nassignableWindow.posthogCustomizations = customizations\n"],"names":["win","window","undefined","global","globalThis","nativeForEach","Array","prototype","forEach","navigator","document","location","fetch","XMLHttpRequest","AbortController","userAgent","assignableWindow","Config","LIB_VERSION","includes","str","needle","indexOf","nativeIsArray","isArray","ObjProto","Object","type_utils_hasOwnProperty","hasOwnProperty","type_utils_toString","toString","obj","call","isObject","x","isUndefined","isNull","isNullish","isNumber","isFormData","FormData","clampToRange","value","min","max","logger","fallbackValue","warn","BucketedRateLimiter","constructor","_options","this","_buckets","_refillBuckets","keys","key","newTokens","_getBucket","_refillRate","_bucketSize","_setBucket","String","consumeRateLimit","_this$_getBucket","_this$_onBucketRateLi","tokens","Math","hasReachedZero","_onBucketRateLimited","bucketSize","_logger","refillRate","_refillInterval","refillInterval","_removeInterval","setInterval","stop","clearInterval","_createLogger","prefix","_log","level","console","consoleLog","_len","arguments","length","args","_key","info","_len2","_key2","_len3","_key3","error","_len4","_key4","critical","_len5","_key5","uninitializedWarning","methodName","createLogger","additionalPrefix","breaker","eachArray","iterator","thisArg","i","l","each","pair","entries","extend","source","prop","extendArray","item","push","stripEmptyProperties","p","ret","v","k","convertToURL","url","createElement","href","getQueryParam","param","keyValuePair","queryParts","split","replace","parts","result","decodeURIComponent","_unused","maskQueryParams","maskedParams","mask","splitHash","withoutHash","hash","splitQuery","queryString","urlWithoutQueryAndHash","paramStrings","join","MOBILE","IOS","ANDROID","TABLET","ANDROID_TABLET","IPAD","APPLE","APPLE_WATCH","SAFARI","BLACKBERRY","SAMSUNG","SAMSUNG_BROWSER","SAMSUNG_INTERNET","CHROME","CHROME_OS","CHROME_IOS","INTERNET_EXPLORER","INTERNET_EXPLORER_MOBILE","OPERA","OPERA_MINI","EDGE","MICROSOFT_EDGE","FIREFOX","FIREFOX_IOS","NINTENDO","PLAYSTATION","XBOX","ANDROID_MOBILE","MOBILE_SAFARI","WINDOWS","WINDOWS_PHONE","NOKIA","OUYA","GENERIC","GENERIC_MOBILE","toLowerCase","GENERIC_TABLET","KONQUEROR","BROWSER_VERSION_REGEX_SUFFIX","DEFAULT_BROWSER_VERSION_REGEX","RegExp","XBOX_REGEX","PLAYSTATION_REGEX","NINTENDO_REGEX","BLACKBERRY_REGEX","windowsVersionMap","safariCheck","ua","vendor","isSafari","detectBrowser","user_agent","test","FACEBOOK","versionRegexes","Mozilla","detectBrowserVersion","browser","regexes","regex","matches","match","parseFloat","osMatchers","_","exec","version","osVersion","versionParts","detectDevice","trunc","ceil","floor","Number","isInteger","isFinite","DIGITS","UUID","bytes","TypeError","fromFieldsV7","unixTsMs","randA","randBHi","randBLo","RangeError","Uint8Array","pow","text","charAt","Error","clone","slice","equals","other","compareTo","diff","sign","V7Generator","_timestamp","_counter","_random","DefaultRandom","generate","generateOrAbort","valueAfterReset","ts","Date","now","_resetCounter","nextUint32","defaultGenerator","getRandomValues","buffer","UUIDV7_DENY_WEAK_RNG","random","crypto","_buffer","Uint32Array","_cursor","Infinity","uuidv7","uuidv7obj","firstNonPublicSubDomain","DOMAIN_MATCH_REGEX","chooseCookieDomain","hostname","cross_subdomain","matchedSubDomain","cookieJar","list","len","candidate","candidateCookieValue","cookie","seekFirstNonPublicSubDomain","originalMatch","originalCookieDomainFn","cookieStore","_is_supported","_error","msg","_get","name","nameEQ","ca","filter","c","substring","_parse","JSON","parse","_unused2","_set","days","is_secure","expires","secure","cdomain","date","setTime","getTime","toUTCString","new_cookie_val","encodeURIComponent","stringify","_unused3","_remove","_unused4","_localStorage_supported","localStore","supported","_unused5","localStorage","getItem","err","_unused6","setItem","removeItem","COOKIE_PERSISTED_PROPERTIES","_extends","cookieProperties","_unused7","_unused8","debug","cookiePersistedProperties","PERSONAL_DATA_CAMPAIGN_PARAMS","CAMPAIGN_PARAMS","EVENT_TO_PERSON_PROPERTIES","MASKED","COOKIE_CAMPAIGN_PARAMS","getCampaignParams","customTrackedParams","maskPersonalDataProperties","customPersonalDataProperties","customParams","campaign_keywords","params","paramsToMask","urlCampaignParams","URL","concat","kwkey","kw","cookieCampaignParams","_getCampaignParamsFromCookie","getBrowserLanguage","language","userLanguage","getTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","getTimezoneOffset","getEventProperties","lang","device","os_name","os_version","rgex","resultOrFn","detectOS","$os","$os_version","$browser","$device","$device_type","$timezone","$timezone_offset","$current_url","$host","host","$pathname","pathname","$raw_user_agent","$browser_version","$browser_language","$browser_language_prefix","$screen_height","screen","height","$screen_width","width","$viewport_height","innerHeight","$viewport_width","innerWidth","$lib","$lib_version","$insert_id","$time","appendArray","currentValue","sampleType","updateThreshold","percent","sampleOnProperty","charCodeAt","abs","simpleHash","defaultTitleFunction","stateEvent","type","executionTimeMs","toFixed","phConsoleLogger","browserConsoleLogger","title","log","getChangedStateKeys","prevState","nextState","maxDepth","prev","next","hasChanges","allKeys","Set","prevVal","nextVal","nested","timeout","ignoredCount","lastActionType","debouncedActionRateLimitedLogger","actionType","clearTimeout","setTimeout","count","posthogReduxLogger","config","maskAction","maskState","titleFunction","diffState","rateLimiterRefillRate","rateLimiterBucketSize","rateLimiter","store","action","typedAction","getState","startTime","performance","maskedAction","filteredPrevState","filteredNextState","maskedPrevState","maskedNextState","_ref","_ref2","diffedPrevState","diffedNextState","invalidPayloadForDiffing","invalidPayloadForLogging","reduxEvent","payload","_objectWithoutPropertiesLoose","_excluded","timestamp","e","middleware","events","beforeReduxStore","options","captureResult","properties","distinct_id","$sample_type","$sample_threshold","eventNames","_captureResult$proper","_captureResult$proper2","_captureResult$proper3","event","$sampled_events","$session_id","postHogInstance","_postHogInstance$sess","sessionRecording","tryAddCustomEvent","posthog","_convertToURL","allProperties","mask_personal_data_properties","custom_personal_data_properties","custom_campaign_params","$referrer","referrer","$referring_domain","personProperties","setPersonPropertiesForFlags","posthogCustomizations","customizations"],"mappings":"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"}